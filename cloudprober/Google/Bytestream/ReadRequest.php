<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bytestream/bytestream.proto

namespace Google\Bytestream;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request object for ByteStream.Read.
 *
 * Generated from protobuf message <code>google.bytestream.ReadRequest</code>
 */
class ReadRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the resource to read.
     *
     * Generated from protobuf field <code>string resource_name = 1;</code>
     */
    private $resource_name = '';
    /**
     * The offset for the first byte to return in the read, relative to the start
     * of the resource.
     * A `read_offset` that is negative or greater than the size of the resource
     * will cause an `OUT_OF_RANGE` error.
     *
     * Generated from protobuf field <code>int64 read_offset = 2;</code>
     */
    private $read_offset = 0;
    /**
     * The maximum number of `data` bytes the server is allowed to return in the
     * sum of all `ReadResponse` messages. A `read_limit` of zero indicates that
     * there is no limit, and a negative `read_limit` will cause an error.
     * If the stream returns fewer bytes than allowed by the `read_limit` and no
     * error occurred, the stream includes all data from the `read_offset` to the
     * end of the resource.
     *
     * Generated from protobuf field <code>int64 read_limit = 3;</code>
     */
    private $read_limit = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $resource_name
     *           The name of the resource to read.
     *     @type int|string $read_offset
     *           The offset for the first byte to return in the read, relative to the start
     *           of the resource.
     *           A `read_offset` that is negative or greater than the size of the resource
     *           will cause an `OUT_OF_RANGE` error.
     *     @type int|string $read_limit
     *           The maximum number of `data` bytes the server is allowed to return in the
     *           sum of all `ReadResponse` messages. A `read_limit` of zero indicates that
     *           there is no limit, and a negative `read_limit` will cause an error.
     *           If the stream returns fewer bytes than allowed by the `read_limit` and no
     *           error occurred, the stream includes all data from the `read_offset` to the
     *           end of the resource.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Bytestream\Bytestream::initOnce();
        parent::__construct($data);
    }

    /**
     * The name of the resource to read.
     *
     * Generated from protobuf field <code>string resource_name = 1;</code>
     * @return string
     */
    public function getResourceName()
    {
        return $this->resource_name;
    }

    /**
     * The name of the resource to read.
     *
     * Generated from protobuf field <code>string resource_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setResourceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->resource_name = $var;

        return $this;
    }

    /**
     * The offset for the first byte to return in the read, relative to the start
     * of the resource.
     * A `read_offset` that is negative or greater than the size of the resource
     * will cause an `OUT_OF_RANGE` error.
     *
     * Generated from protobuf field <code>int64 read_offset = 2;</code>
     * @return int|string
     */
    public function getReadOffset()
    {
        return $this->read_offset;
    }

    /**
     * The offset for the first byte to return in the read, relative to the start
     * of the resource.
     * A `read_offset` that is negative or greater than the size of the resource
     * will cause an `OUT_OF_RANGE` error.
     *
     * Generated from protobuf field <code>int64 read_offset = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setReadOffset($var)
    {
        GPBUtil::checkInt64($var);
        $this->read_offset = $var;

        return $this;
    }

    /**
     * The maximum number of `data` bytes the server is allowed to return in the
     * sum of all `ReadResponse` messages. A `read_limit` of zero indicates that
     * there is no limit, and a negative `read_limit` will cause an error.
     * If the stream returns fewer bytes than allowed by the `read_limit` and no
     * error occurred, the stream includes all data from the `read_offset` to the
     * end of the resource.
     *
     * Generated from protobuf field <code>int64 read_limit = 3;</code>
     * @return int|string
     */
    public function getReadLimit()
    {
        return $this->read_limit;
    }

    /**
     * The maximum number of `data` bytes the server is allowed to return in the
     * sum of all `ReadResponse` messages. A `read_limit` of zero indicates that
     * there is no limit, and a negative `read_limit` will cause an error.
     * If the stream returns fewer bytes than allowed by the `read_limit` and no
     * error occurred, the stream includes all data from the `read_offset` to the
     * end of the resource.
     *
     * Generated from protobuf field <code>int64 read_limit = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setReadLimit($var)
    {
        GPBUtil::checkInt64($var);
        $this->read_limit = $var;

        return $this;
    }

}

