<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/streetview/publish/v1/resources.proto

namespace Google\Streetview\Publish\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A connection is the link from a source photo to a destination photo.
 *
 * Generated from protobuf message <code>google.streetview.publish.v1.Connection</code>
 */
class Connection extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The destination of the connection from the containing photo to
     * another photo.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     */
    private $target = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Streetview\Publish\V1\PhotoId $target
     *           Required. The destination of the connection from the containing photo to
     *           another photo.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Streetview\Publish\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The destination of the connection from the containing photo to
     * another photo.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     * @return \Google\Streetview\Publish\V1\PhotoId
     */
    public function getTarget()
    {
        return $this->target;
    }

    /**
     * Required. The destination of the connection from the containing photo to
     * another photo.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.PhotoId target = 1;</code>
     * @param \Google\Streetview\Publish\V1\PhotoId $var
     * @return $this
     */
    public function setTarget($var)
    {
        GPBUtil::checkMessage($var, \Google\Streetview\Publish\V1\PhotoId::class);
        $this->target = $var;

        return $this;
    }

}

