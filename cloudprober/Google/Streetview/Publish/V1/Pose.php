<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/streetview/publish/v1/resources.proto

namespace Google\Streetview\Publish\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Raw pose measurement for an entity.
 *
 * Generated from protobuf message <code>google.streetview.publish.v1.Pose</code>
 */
class Pose extends \Google\Protobuf\Internal\Message
{
    /**
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a photo, if the latitude and longitude pair are not provided
     * here, the geolocation from the exif header will be used.
     * If the latitude and longitude pair is not provided and cannot be found in
     * the exif header, the create photo process will fail.
     *
     * Generated from protobuf field <code>.google.type.LatLng lat_lng_pair = 1;</code>
     */
    private $lat_lng_pair = null;
    /**
     * Altitude of the pose in meters above ground level (as defined by WGS84).
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double altitude = 2;</code>
     */
    private $altitude = 0.0;
    /**
     * Compass heading, measured at the center of the photo in degrees clockwise
     * from North. Value must be >=0 and <360.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double heading = 3;</code>
     */
    private $heading = 0.0;
    /**
     * Pitch, measured at the center of the photo in degrees. Value must be >=-90
     * and <= 90. A value of -90 means looking directly down, and a value of 90
     * means looking directly up.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double pitch = 4;</code>
     */
    private $pitch = 0.0;
    /**
     * Roll, measured in degrees. Value must be >= 0 and <360. A value of 0
     * means level with the horizon.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double roll = 5;</code>
     */
    private $roll = 0.0;
    /**
     * Level (the floor in a building) used to configure vertical navigation.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.Level level = 7;</code>
     */
    private $level = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Type\LatLng $lat_lng_pair
     *           Latitude and longitude pair of the pose, as explained here:
     *           https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     *           When creating a photo, if the latitude and longitude pair are not provided
     *           here, the geolocation from the exif header will be used.
     *           If the latitude and longitude pair is not provided and cannot be found in
     *           the exif header, the create photo process will fail.
     *     @type float $altitude
     *           Altitude of the pose in meters above ground level (as defined by WGS84).
     *           NaN indicates an unmeasured quantity.
     *     @type float $heading
     *           Compass heading, measured at the center of the photo in degrees clockwise
     *           from North. Value must be >=0 and <360.
     *           NaN indicates an unmeasured quantity.
     *     @type float $pitch
     *           Pitch, measured at the center of the photo in degrees. Value must be >=-90
     *           and <= 90. A value of -90 means looking directly down, and a value of 90
     *           means looking directly up.
     *           NaN indicates an unmeasured quantity.
     *     @type float $roll
     *           Roll, measured in degrees. Value must be >= 0 and <360. A value of 0
     *           means level with the horizon.
     *           NaN indicates an unmeasured quantity.
     *     @type \Google\Streetview\Publish\V1\Level $level
     *           Level (the floor in a building) used to configure vertical navigation.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Streetview\Publish\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a photo, if the latitude and longitude pair are not provided
     * here, the geolocation from the exif header will be used.
     * If the latitude and longitude pair is not provided and cannot be found in
     * the exif header, the create photo process will fail.
     *
     * Generated from protobuf field <code>.google.type.LatLng lat_lng_pair = 1;</code>
     * @return \Google\Type\LatLng
     */
    public function getLatLngPair()
    {
        return $this->lat_lng_pair;
    }

    /**
     * Latitude and longitude pair of the pose, as explained here:
     * https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
     * When creating a photo, if the latitude and longitude pair are not provided
     * here, the geolocation from the exif header will be used.
     * If the latitude and longitude pair is not provided and cannot be found in
     * the exif header, the create photo process will fail.
     *
     * Generated from protobuf field <code>.google.type.LatLng lat_lng_pair = 1;</code>
     * @param \Google\Type\LatLng $var
     * @return $this
     */
    public function setLatLngPair($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\LatLng::class);
        $this->lat_lng_pair = $var;

        return $this;
    }

    /**
     * Altitude of the pose in meters above ground level (as defined by WGS84).
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double altitude = 2;</code>
     * @return float
     */
    public function getAltitude()
    {
        return $this->altitude;
    }

    /**
     * Altitude of the pose in meters above ground level (as defined by WGS84).
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double altitude = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setAltitude($var)
    {
        GPBUtil::checkDouble($var);
        $this->altitude = $var;

        return $this;
    }

    /**
     * Compass heading, measured at the center of the photo in degrees clockwise
     * from North. Value must be >=0 and <360.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double heading = 3;</code>
     * @return float
     */
    public function getHeading()
    {
        return $this->heading;
    }

    /**
     * Compass heading, measured at the center of the photo in degrees clockwise
     * from North. Value must be >=0 and <360.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double heading = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setHeading($var)
    {
        GPBUtil::checkDouble($var);
        $this->heading = $var;

        return $this;
    }

    /**
     * Pitch, measured at the center of the photo in degrees. Value must be >=-90
     * and <= 90. A value of -90 means looking directly down, and a value of 90
     * means looking directly up.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double pitch = 4;</code>
     * @return float
     */
    public function getPitch()
    {
        return $this->pitch;
    }

    /**
     * Pitch, measured at the center of the photo in degrees. Value must be >=-90
     * and <= 90. A value of -90 means looking directly down, and a value of 90
     * means looking directly up.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double pitch = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setPitch($var)
    {
        GPBUtil::checkDouble($var);
        $this->pitch = $var;

        return $this;
    }

    /**
     * Roll, measured in degrees. Value must be >= 0 and <360. A value of 0
     * means level with the horizon.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double roll = 5;</code>
     * @return float
     */
    public function getRoll()
    {
        return $this->roll;
    }

    /**
     * Roll, measured in degrees. Value must be >= 0 and <360. A value of 0
     * means level with the horizon.
     * NaN indicates an unmeasured quantity.
     *
     * Generated from protobuf field <code>double roll = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setRoll($var)
    {
        GPBUtil::checkDouble($var);
        $this->roll = $var;

        return $this;
    }

    /**
     * Level (the floor in a building) used to configure vertical navigation.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.Level level = 7;</code>
     * @return \Google\Streetview\Publish\V1\Level
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * Level (the floor in a building) used to configure vertical navigation.
     *
     * Generated from protobuf field <code>.google.streetview.publish.v1.Level level = 7;</code>
     * @param \Google\Streetview\Publish\V1\Level $var
     * @return $this
     */
    public function setLevel($var)
    {
        GPBUtil::checkMessage($var, \Google\Streetview\Publish\V1\Level::class);
        $this->level = $var;

        return $this;
    }

}

