<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto

namespace Google\Cloud\RuntimeConfig\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for the `WatchVariable()` method.
 *
 * Generated from protobuf message <code>google.cloud.runtimeconfig.v1beta1.WatchVariableRequest</code>
 */
class WatchVariableRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the variable to watch, in the format:
     * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * If specified, checks the current timestamp of the variable and if the
     * current timestamp is newer than `newerThan` timestamp, the method returns
     * immediately.
     * If not specified or the variable has an older timestamp, the watcher waits
     * for a the value to change before returning.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp newer_than = 4;</code>
     */
    private $newer_than = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The name of the variable to watch, in the format:
     *           `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
     *     @type \Google\Protobuf\Timestamp $newer_than
     *           If specified, checks the current timestamp of the variable and if the
     *           current timestamp is newer than `newerThan` timestamp, the method returns
     *           immediately.
     *           If not specified or the variable has an older timestamp, the watcher waits
     *           for a the value to change before returning.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Runtimeconfig\V1Beta1\Runtimeconfig::initOnce();
        parent::__construct($data);
    }

    /**
     * The name of the variable to watch, in the format:
     * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the variable to watch, in the format:
     * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * If specified, checks the current timestamp of the variable and if the
     * current timestamp is newer than `newerThan` timestamp, the method returns
     * immediately.
     * If not specified or the variable has an older timestamp, the watcher waits
     * for a the value to change before returning.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp newer_than = 4;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getNewerThan()
    {
        return $this->newer_than;
    }

    /**
     * If specified, checks the current timestamp of the variable and if the
     * current timestamp is newer than `newerThan` timestamp, the method returns
     * immediately.
     * If not specified or the variable has an older timestamp, the watcher waits
     * for a the value to change before returning.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp newer_than = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setNewerThan($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->newer_than = $var;

        return $this;
    }

}

