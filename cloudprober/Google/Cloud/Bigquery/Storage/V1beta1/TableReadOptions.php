<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/storage/v1beta1/read_options.proto

namespace Google\Cloud\Bigquery\Storage\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Options dictating how we read a table.
 *
 * Generated from protobuf message <code>google.cloud.bigquery.storage.v1beta1.TableReadOptions</code>
 */
class TableReadOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Names of the fields in the table that should be read. If empty,
     * all fields will be read. If the specified field is a nested field, all the
     * sub-fields in the field will be selected. The output field order is
     * unrelated to the order of fields in selected_fields.
     *
     * Generated from protobuf field <code>repeated string selected_fields = 1;</code>
     */
    private $selected_fields;
    /**
     * Optional. SQL text filtering statement, similar to a WHERE clause in
     * a query. Currently, we support combinations of predicates that are
     * a comparison between a column and a constant value in SQL statement.
     * Aggregates are not supported.
     * Example: "a > DATE '2014-9-27' AND (b > 5 and C LIKE 'date')"
     *
     * Generated from protobuf field <code>string row_restriction = 2;</code>
     */
    private $row_restriction = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $selected_fields
     *           Optional. Names of the fields in the table that should be read. If empty,
     *           all fields will be read. If the specified field is a nested field, all the
     *           sub-fields in the field will be selected. The output field order is
     *           unrelated to the order of fields in selected_fields.
     *     @type string $row_restriction
     *           Optional. SQL text filtering statement, similar to a WHERE clause in
     *           a query. Currently, we support combinations of predicates that are
     *           a comparison between a column and a constant value in SQL statement.
     *           Aggregates are not supported.
     *           Example: "a > DATE '2014-9-27' AND (b > 5 and C LIKE 'date')"
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Bigquery\Storage\V1Beta1\ReadOptions::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Names of the fields in the table that should be read. If empty,
     * all fields will be read. If the specified field is a nested field, all the
     * sub-fields in the field will be selected. The output field order is
     * unrelated to the order of fields in selected_fields.
     *
     * Generated from protobuf field <code>repeated string selected_fields = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSelectedFields()
    {
        return $this->selected_fields;
    }

    /**
     * Optional. Names of the fields in the table that should be read. If empty,
     * all fields will be read. If the specified field is a nested field, all the
     * sub-fields in the field will be selected. The output field order is
     * unrelated to the order of fields in selected_fields.
     *
     * Generated from protobuf field <code>repeated string selected_fields = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSelectedFields($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->selected_fields = $arr;

        return $this;
    }

    /**
     * Optional. SQL text filtering statement, similar to a WHERE clause in
     * a query. Currently, we support combinations of predicates that are
     * a comparison between a column and a constant value in SQL statement.
     * Aggregates are not supported.
     * Example: "a > DATE '2014-9-27' AND (b > 5 and C LIKE 'date')"
     *
     * Generated from protobuf field <code>string row_restriction = 2;</code>
     * @return string
     */
    public function getRowRestriction()
    {
        return $this->row_restriction;
    }

    /**
     * Optional. SQL text filtering statement, similar to a WHERE clause in
     * a query. Currently, we support combinations of predicates that are
     * a comparison between a column and a constant value in SQL statement.
     * Aggregates are not supported.
     * Example: "a > DATE '2014-9-27' AND (b > 5 and C LIKE 'date')"
     *
     * Generated from protobuf field <code>string row_restriction = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRowRestriction($var)
    {
        GPBUtil::checkString($var, True);
        $this->row_restriction = $var;

        return $this;
    }

}

