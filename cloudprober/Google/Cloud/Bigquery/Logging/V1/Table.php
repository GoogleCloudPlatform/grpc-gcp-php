<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/logging/v1/audit_data.proto

namespace Google\Cloud\Bigquery\Logging\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes a BigQuery table.
 * See the [Table](/bigquery/docs/reference/v2/tables) API resource
 * for more details on individual fields.
 * Note: `Table.schema` has been deprecated in favor of `Table.schemaJson`.
 * `Table.schema` may continue to be present in your logs during this
 * transition.
 *
 * Generated from protobuf message <code>google.cloud.bigquery.logging.v1.Table</code>
 */
class Table extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the table.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     */
    private $table_name = null;
    /**
     * User-provided metadata for the table.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     */
    private $info = null;
    /**
     * A JSON representation of the table's schema.
     *
     * Generated from protobuf field <code>string schema_json = 8;</code>
     */
    private $schema_json = '';
    /**
     * If present, this is a virtual table defined by a SQL query.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     */
    private $view = null;
    /**
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    private $expire_time = null;
    /**
     * The time the table was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    private $create_time = null;
    /**
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp truncate_time = 7;</code>
     */
    private $truncate_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Bigquery\Logging\V1\TableName $table_name
     *           The name of the table.
     *     @type \Google\Cloud\Bigquery\Logging\V1\TableInfo $info
     *           User-provided metadata for the table.
     *     @type string $schema_json
     *           A JSON representation of the table's schema.
     *     @type \Google\Cloud\Bigquery\Logging\V1\TableViewDefinition $view
     *           If present, this is a virtual table defined by a SQL query.
     *     @type \Google\Protobuf\Timestamp $expire_time
     *           The expiration date for the table, after which the table
     *           is deleted and the storage reclaimed.
     *           If not present, the table persists indefinitely.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           The time the table was created.
     *     @type \Google\Protobuf\Timestamp $truncate_time
     *           The time the table was last truncated
     *           by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Bigquery\Logging\V1\AuditData::initOnce();
        parent::__construct($data);
    }

    /**
     * The name of the table.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     * @return \Google\Cloud\Bigquery\Logging\V1\TableName
     */
    public function getTableName()
    {
        return $this->table_name;
    }

    /**
     * The name of the table.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableName table_name = 1;</code>
     * @param \Google\Cloud\Bigquery\Logging\V1\TableName $var
     * @return $this
     */
    public function setTableName($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Bigquery\Logging\V1\TableName::class);
        $this->table_name = $var;

        return $this;
    }

    /**
     * User-provided metadata for the table.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     * @return \Google\Cloud\Bigquery\Logging\V1\TableInfo
     */
    public function getInfo()
    {
        return $this->info;
    }

    /**
     * User-provided metadata for the table.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableInfo info = 2;</code>
     * @param \Google\Cloud\Bigquery\Logging\V1\TableInfo $var
     * @return $this
     */
    public function setInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Bigquery\Logging\V1\TableInfo::class);
        $this->info = $var;

        return $this;
    }

    /**
     * A JSON representation of the table's schema.
     *
     * Generated from protobuf field <code>string schema_json = 8;</code>
     * @return string
     */
    public function getSchemaJson()
    {
        return $this->schema_json;
    }

    /**
     * A JSON representation of the table's schema.
     *
     * Generated from protobuf field <code>string schema_json = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setSchemaJson($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema_json = $var;

        return $this;
    }

    /**
     * If present, this is a virtual table defined by a SQL query.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     * @return \Google\Cloud\Bigquery\Logging\V1\TableViewDefinition
     */
    public function getView()
    {
        return $this->view;
    }

    /**
     * If present, this is a virtual table defined by a SQL query.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableViewDefinition view = 4;</code>
     * @param \Google\Cloud\Bigquery\Logging\V1\TableViewDefinition $var
     * @return $this
     */
    public function setView($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Bigquery\Logging\V1\TableViewDefinition::class);
        $this->view = $var;

        return $this;
    }

    /**
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    /**
     * The expiration date for the table, after which the table
     * is deleted and the storage reclaimed.
     * If not present, the table persists indefinitely.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_time = $var;

        return $this;
    }

    /**
     * The time the table was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    /**
     * The time the table was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp truncate_time = 7;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getTruncateTime()
    {
        return $this->truncate_time;
    }

    /**
     * The time the table was last truncated
     * by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp truncate_time = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTruncateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->truncate_time = $var;

        return $this;
    }

}

