<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vision/v1p3beta1/geometry.proto

namespace Google\Cloud\Vision\V1p3beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A normalized bounding polygon around a portion of an image.
 *
 * Generated from protobuf message <code>google.cloud.vision.v1p3beta1.NormalizedBoundingPoly</code>
 */
class NormalizedBoundingPoly extends \Google\Protobuf\Internal\Message
{
    /**
     * Normalized vertices of the bounding polygon.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vision.v1p3beta1.NormalizedVertex vertices = 1;</code>
     */
    private $vertices;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Vision\V1p3beta1\NormalizedVertex[]|\Google\Protobuf\Internal\RepeatedField $vertices
     *           Normalized vertices of the bounding polygon.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vision\V1P3Beta1\Geometry::initOnce();
        parent::__construct($data);
    }

    /**
     * Normalized vertices of the bounding polygon.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vision.v1p3beta1.NormalizedVertex vertices = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getVertices()
    {
        return $this->vertices;
    }

    /**
     * Normalized vertices of the bounding polygon.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vision.v1p3beta1.NormalizedVertex vertices = 1;</code>
     * @param \Google\Cloud\Vision\V1p3beta1\NormalizedVertex[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setVertices($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Vision\V1p3beta1\NormalizedVertex::class);
        $this->vertices = $arr;

        return $this;
    }

}

