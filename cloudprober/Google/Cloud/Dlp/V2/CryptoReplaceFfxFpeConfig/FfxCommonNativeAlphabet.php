<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2\CryptoReplaceFfxFpeConfig;

/**
 * These are commonly used subsets of the alphabet that the FFX mode
 * natively supports. In the algorithm, the alphabet is selected using
 * the "radix". Therefore each corresponds to particular radix.
 *
 * Protobuf type <code>google.privacy.dlp.v2.CryptoReplaceFfxFpeConfig.FfxCommonNativeAlphabet</code>
 */
class FfxCommonNativeAlphabet
{
    /**
     * Generated from protobuf enum <code>FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED = 0;</code>
     */
    const FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED = 0;
    /**
     * [0-9] (radix of 10)
     *
     * Generated from protobuf enum <code>NUMERIC = 1;</code>
     */
    const NUMERIC = 1;
    /**
     * [0-9A-F] (radix of 16)
     *
     * Generated from protobuf enum <code>HEXADECIMAL = 2;</code>
     */
    const HEXADECIMAL = 2;
    /**
     * [0-9A-Z] (radix of 36)
     *
     * Generated from protobuf enum <code>UPPER_CASE_ALPHA_NUMERIC = 3;</code>
     */
    const UPPER_CASE_ALPHA_NUMERIC = 3;
    /**
     * [0-9A-Za-z] (radix of 62)
     *
     * Generated from protobuf enum <code>ALPHA_NUMERIC = 4;</code>
     */
    const ALPHA_NUMERIC = 4;
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FfxCommonNativeAlphabet::class, \Google\Cloud\Dlp\V2\CryptoReplaceFfxFpeConfig_FfxCommonNativeAlphabet::class);

