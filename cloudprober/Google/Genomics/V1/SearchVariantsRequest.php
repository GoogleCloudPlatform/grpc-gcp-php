<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/genomics/v1/variants.proto

namespace Google\Genomics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The variant search request.
 *
 * Generated from protobuf message <code>google.genomics.v1.SearchVariantsRequest</code>
 */
class SearchVariantsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * At most one variant set ID must be provided. Only variants from this
     * variant set will be returned. If omitted, a call set id must be included in
     * the request.
     *
     * Generated from protobuf field <code>repeated string variant_set_ids = 1;</code>
     */
    private $variant_set_ids;
    /**
     * Only return variants which have exactly this name.
     *
     * Generated from protobuf field <code>string variant_name = 2;</code>
     */
    private $variant_name = '';
    /**
     * Only return variant calls which belong to call sets with these ids.
     * Leaving this blank returns all variant calls. If a variant has no
     * calls belonging to any of these call sets, it won't be returned at all.
     *
     * Generated from protobuf field <code>repeated string call_set_ids = 3;</code>
     */
    private $call_set_ids;
    /**
     * Required. Only return variants in this reference sequence.
     *
     * Generated from protobuf field <code>string reference_name = 4;</code>
     */
    private $reference_name = '';
    /**
     * The beginning of the window (0-based, inclusive) for which
     * overlapping variants should be returned. If unspecified, defaults to 0.
     *
     * Generated from protobuf field <code>int64 start = 5;</code>
     */
    private $start = 0;
    /**
     * The end of the window, 0-based exclusive. If unspecified or 0, defaults to
     * the length of the reference.
     *
     * Generated from protobuf field <code>int64 end = 6;</code>
     */
    private $end = 0;
    /**
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `nextPageToken` from the previous response.
     *
     * Generated from protobuf field <code>string page_token = 7;</code>
     */
    private $page_token = '';
    /**
     * The maximum number of variants to return in a single page. If unspecified,
     * defaults to 5000. The maximum value is 10000.
     *
     * Generated from protobuf field <code>int32 page_size = 8;</code>
     */
    private $page_size = 0;
    /**
     * The maximum number of calls to return in a single page. Note that this
     * limit may be exceeded in the event that a matching variant contains more
     * calls than the requested maximum. If unspecified, defaults to 5000. The
     * maximum value is 10000.
     *
     * Generated from protobuf field <code>int32 max_calls = 9;</code>
     */
    private $max_calls = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $variant_set_ids
     *           At most one variant set ID must be provided. Only variants from this
     *           variant set will be returned. If omitted, a call set id must be included in
     *           the request.
     *     @type string $variant_name
     *           Only return variants which have exactly this name.
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $call_set_ids
     *           Only return variant calls which belong to call sets with these ids.
     *           Leaving this blank returns all variant calls. If a variant has no
     *           calls belonging to any of these call sets, it won't be returned at all.
     *     @type string $reference_name
     *           Required. Only return variants in this reference sequence.
     *     @type int|string $start
     *           The beginning of the window (0-based, inclusive) for which
     *           overlapping variants should be returned. If unspecified, defaults to 0.
     *     @type int|string $end
     *           The end of the window, 0-based exclusive. If unspecified or 0, defaults to
     *           the length of the reference.
     *     @type string $page_token
     *           The continuation token, which is used to page through large result sets.
     *           To get the next page of results, set this parameter to the value of
     *           `nextPageToken` from the previous response.
     *     @type int $page_size
     *           The maximum number of variants to return in a single page. If unspecified,
     *           defaults to 5000. The maximum value is 10000.
     *     @type int $max_calls
     *           The maximum number of calls to return in a single page. Note that this
     *           limit may be exceeded in the event that a matching variant contains more
     *           calls than the requested maximum. If unspecified, defaults to 5000. The
     *           maximum value is 10000.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Genomics\V1\Variants::initOnce();
        parent::__construct($data);
    }

    /**
     * At most one variant set ID must be provided. Only variants from this
     * variant set will be returned. If omitted, a call set id must be included in
     * the request.
     *
     * Generated from protobuf field <code>repeated string variant_set_ids = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getVariantSetIds()
    {
        return $this->variant_set_ids;
    }

    /**
     * At most one variant set ID must be provided. Only variants from this
     * variant set will be returned. If omitted, a call set id must be included in
     * the request.
     *
     * Generated from protobuf field <code>repeated string variant_set_ids = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setVariantSetIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->variant_set_ids = $arr;

        return $this;
    }

    /**
     * Only return variants which have exactly this name.
     *
     * Generated from protobuf field <code>string variant_name = 2;</code>
     * @return string
     */
    public function getVariantName()
    {
        return $this->variant_name;
    }

    /**
     * Only return variants which have exactly this name.
     *
     * Generated from protobuf field <code>string variant_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setVariantName($var)
    {
        GPBUtil::checkString($var, True);
        $this->variant_name = $var;

        return $this;
    }

    /**
     * Only return variant calls which belong to call sets with these ids.
     * Leaving this blank returns all variant calls. If a variant has no
     * calls belonging to any of these call sets, it won't be returned at all.
     *
     * Generated from protobuf field <code>repeated string call_set_ids = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCallSetIds()
    {
        return $this->call_set_ids;
    }

    /**
     * Only return variant calls which belong to call sets with these ids.
     * Leaving this blank returns all variant calls. If a variant has no
     * calls belonging to any of these call sets, it won't be returned at all.
     *
     * Generated from protobuf field <code>repeated string call_set_ids = 3;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCallSetIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->call_set_ids = $arr;

        return $this;
    }

    /**
     * Required. Only return variants in this reference sequence.
     *
     * Generated from protobuf field <code>string reference_name = 4;</code>
     * @return string
     */
    public function getReferenceName()
    {
        return $this->reference_name;
    }

    /**
     * Required. Only return variants in this reference sequence.
     *
     * Generated from protobuf field <code>string reference_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setReferenceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference_name = $var;

        return $this;
    }

    /**
     * The beginning of the window (0-based, inclusive) for which
     * overlapping variants should be returned. If unspecified, defaults to 0.
     *
     * Generated from protobuf field <code>int64 start = 5;</code>
     * @return int|string
     */
    public function getStart()
    {
        return $this->start;
    }

    /**
     * The beginning of the window (0-based, inclusive) for which
     * overlapping variants should be returned. If unspecified, defaults to 0.
     *
     * Generated from protobuf field <code>int64 start = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setStart($var)
    {
        GPBUtil::checkInt64($var);
        $this->start = $var;

        return $this;
    }

    /**
     * The end of the window, 0-based exclusive. If unspecified or 0, defaults to
     * the length of the reference.
     *
     * Generated from protobuf field <code>int64 end = 6;</code>
     * @return int|string
     */
    public function getEnd()
    {
        return $this->end;
    }

    /**
     * The end of the window, 0-based exclusive. If unspecified or 0, defaults to
     * the length of the reference.
     *
     * Generated from protobuf field <code>int64 end = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setEnd($var)
    {
        GPBUtil::checkInt64($var);
        $this->end = $var;

        return $this;
    }

    /**
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `nextPageToken` from the previous response.
     *
     * Generated from protobuf field <code>string page_token = 7;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `nextPageToken` from the previous response.
     *
     * Generated from protobuf field <code>string page_token = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * The maximum number of variants to return in a single page. If unspecified,
     * defaults to 5000. The maximum value is 10000.
     *
     * Generated from protobuf field <code>int32 page_size = 8;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * The maximum number of variants to return in a single page. If unspecified,
     * defaults to 5000. The maximum value is 10000.
     *
     * Generated from protobuf field <code>int32 page_size = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * The maximum number of calls to return in a single page. Note that this
     * limit may be exceeded in the event that a matching variant contains more
     * calls than the requested maximum. If unspecified, defaults to 5000. The
     * maximum value is 10000.
     *
     * Generated from protobuf field <code>int32 max_calls = 9;</code>
     * @return int
     */
    public function getMaxCalls()
    {
        return $this->max_calls;
    }

    /**
     * The maximum number of calls to return in a single page. Note that this
     * limit may be exceeded in the event that a matching variant contains more
     * calls than the requested maximum. If unspecified, defaults to 5000. The
     * maximum value is 10000.
     *
     * Generated from protobuf field <code>int32 max_calls = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxCalls($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_calls = $var;

        return $this;
    }

}

