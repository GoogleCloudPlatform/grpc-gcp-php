<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/resultstore/v2/action.proto

namespace Google\Devtools\Resultstore\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A test action, such as running a JUnit4 test binary.
 *
 * Generated from protobuf message <code>google.devtools.resultstore.v2.TestAction</code>
 */
class TestAction extends \Google\Protobuf\Internal\Message
{
    /**
     * Timing data for execution of the test action.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.TestTiming test_timing = 1;</code>
     */
    private $test_timing = null;
    /**
     * If the test is divided up into shards to improve performance, set this to
     * indicate which shard this test action is for. Value must be in interval
     * [0, total_shard_count). Defaults to 0, which is appropriate if all test
     * cases are run in the same process.
     *
     * Generated from protobuf field <code>int32 shard_number = 2;</code>
     */
    private $shard_number = 0;
    /**
     * If the user requested that every test be run multiple times, as is often
     * done to measure flakiness, set this to indicate which run this test action
     * is for. Value must be in interval [0, total_run_count). Defaults to 0,
     * which is appropriate if multiple runs were not requested.
     *
     * Generated from protobuf field <code>int32 run_number = 3;</code>
     */
    private $run_number = 0;
    /**
     * If flaky tests are automatically retried, set this to indicate which
     * attempt this test action is for. (e.g. 0 for the first attempt, 1 for
     * second, and so on). Defaults to 0, which is appropriate if this is only
     * attempt.
     *
     * Generated from protobuf field <code>int32 attempt_number = 4;</code>
     */
    private $attempt_number = 0;
    /**
     * A tree of test suites and test cases that were run by this test action.
     * Each test case has its own status information, including stack traces.
     * Typically produced by parsing an XML Log, but may also be provided directly
     * by clients.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.TestSuite test_suite = 5;</code>
     */
    private $test_suite = null;
    /**
     * Warnings for this test action.
     *
     * Generated from protobuf field <code>repeated .google.devtools.resultstore.v2.TestWarning warnings = 8;</code>
     */
    private $warnings;
    /**
     * Estimated memory consumption of the test action, in bytes. A default value
     * of 0 means there is no memory consumption estimate specified.
     *
     * Generated from protobuf field <code>int64 estimated_memory_bytes = 10;</code>
     */
    private $estimated_memory_bytes = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Resultstore\V2\TestTiming $test_timing
     *           Timing data for execution of the test action.
     *     @type int $shard_number
     *           If the test is divided up into shards to improve performance, set this to
     *           indicate which shard this test action is for. Value must be in interval
     *           [0, total_shard_count). Defaults to 0, which is appropriate if all test
     *           cases are run in the same process.
     *     @type int $run_number
     *           If the user requested that every test be run multiple times, as is often
     *           done to measure flakiness, set this to indicate which run this test action
     *           is for. Value must be in interval [0, total_run_count). Defaults to 0,
     *           which is appropriate if multiple runs were not requested.
     *     @type int $attempt_number
     *           If flaky tests are automatically retried, set this to indicate which
     *           attempt this test action is for. (e.g. 0 for the first attempt, 1 for
     *           second, and so on). Defaults to 0, which is appropriate if this is only
     *           attempt.
     *     @type \Google\Devtools\Resultstore\V2\TestSuite $test_suite
     *           A tree of test suites and test cases that were run by this test action.
     *           Each test case has its own status information, including stack traces.
     *           Typically produced by parsing an XML Log, but may also be provided directly
     *           by clients.
     *     @type \Google\Devtools\Resultstore\V2\TestWarning[]|\Google\Protobuf\Internal\RepeatedField $warnings
     *           Warnings for this test action.
     *     @type int|string $estimated_memory_bytes
     *           Estimated memory consumption of the test action, in bytes. A default value
     *           of 0 means there is no memory consumption estimate specified.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Resultstore\V2\Action::initOnce();
        parent::__construct($data);
    }

    /**
     * Timing data for execution of the test action.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.TestTiming test_timing = 1;</code>
     * @return \Google\Devtools\Resultstore\V2\TestTiming
     */
    public function getTestTiming()
    {
        return $this->test_timing;
    }

    /**
     * Timing data for execution of the test action.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.TestTiming test_timing = 1;</code>
     * @param \Google\Devtools\Resultstore\V2\TestTiming $var
     * @return $this
     */
    public function setTestTiming($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Resultstore\V2\TestTiming::class);
        $this->test_timing = $var;

        return $this;
    }

    /**
     * If the test is divided up into shards to improve performance, set this to
     * indicate which shard this test action is for. Value must be in interval
     * [0, total_shard_count). Defaults to 0, which is appropriate if all test
     * cases are run in the same process.
     *
     * Generated from protobuf field <code>int32 shard_number = 2;</code>
     * @return int
     */
    public function getShardNumber()
    {
        return $this->shard_number;
    }

    /**
     * If the test is divided up into shards to improve performance, set this to
     * indicate which shard this test action is for. Value must be in interval
     * [0, total_shard_count). Defaults to 0, which is appropriate if all test
     * cases are run in the same process.
     *
     * Generated from protobuf field <code>int32 shard_number = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setShardNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->shard_number = $var;

        return $this;
    }

    /**
     * If the user requested that every test be run multiple times, as is often
     * done to measure flakiness, set this to indicate which run this test action
     * is for. Value must be in interval [0, total_run_count). Defaults to 0,
     * which is appropriate if multiple runs were not requested.
     *
     * Generated from protobuf field <code>int32 run_number = 3;</code>
     * @return int
     */
    public function getRunNumber()
    {
        return $this->run_number;
    }

    /**
     * If the user requested that every test be run multiple times, as is often
     * done to measure flakiness, set this to indicate which run this test action
     * is for. Value must be in interval [0, total_run_count). Defaults to 0,
     * which is appropriate if multiple runs were not requested.
     *
     * Generated from protobuf field <code>int32 run_number = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setRunNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->run_number = $var;

        return $this;
    }

    /**
     * If flaky tests are automatically retried, set this to indicate which
     * attempt this test action is for. (e.g. 0 for the first attempt, 1 for
     * second, and so on). Defaults to 0, which is appropriate if this is only
     * attempt.
     *
     * Generated from protobuf field <code>int32 attempt_number = 4;</code>
     * @return int
     */
    public function getAttemptNumber()
    {
        return $this->attempt_number;
    }

    /**
     * If flaky tests are automatically retried, set this to indicate which
     * attempt this test action is for. (e.g. 0 for the first attempt, 1 for
     * second, and so on). Defaults to 0, which is appropriate if this is only
     * attempt.
     *
     * Generated from protobuf field <code>int32 attempt_number = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setAttemptNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->attempt_number = $var;

        return $this;
    }

    /**
     * A tree of test suites and test cases that were run by this test action.
     * Each test case has its own status information, including stack traces.
     * Typically produced by parsing an XML Log, but may also be provided directly
     * by clients.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.TestSuite test_suite = 5;</code>
     * @return \Google\Devtools\Resultstore\V2\TestSuite
     */
    public function getTestSuite()
    {
        return $this->test_suite;
    }

    /**
     * A tree of test suites and test cases that were run by this test action.
     * Each test case has its own status information, including stack traces.
     * Typically produced by parsing an XML Log, but may also be provided directly
     * by clients.
     *
     * Generated from protobuf field <code>.google.devtools.resultstore.v2.TestSuite test_suite = 5;</code>
     * @param \Google\Devtools\Resultstore\V2\TestSuite $var
     * @return $this
     */
    public function setTestSuite($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Resultstore\V2\TestSuite::class);
        $this->test_suite = $var;

        return $this;
    }

    /**
     * Warnings for this test action.
     *
     * Generated from protobuf field <code>repeated .google.devtools.resultstore.v2.TestWarning warnings = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getWarnings()
    {
        return $this->warnings;
    }

    /**
     * Warnings for this test action.
     *
     * Generated from protobuf field <code>repeated .google.devtools.resultstore.v2.TestWarning warnings = 8;</code>
     * @param \Google\Devtools\Resultstore\V2\TestWarning[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setWarnings($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Resultstore\V2\TestWarning::class);
        $this->warnings = $arr;

        return $this;
    }

    /**
     * Estimated memory consumption of the test action, in bytes. A default value
     * of 0 means there is no memory consumption estimate specified.
     *
     * Generated from protobuf field <code>int64 estimated_memory_bytes = 10;</code>
     * @return int|string
     */
    public function getEstimatedMemoryBytes()
    {
        return $this->estimated_memory_bytes;
    }

    /**
     * Estimated memory consumption of the test action, in bytes. A default value
     * of 0 means there is no memory consumption estimate specified.
     *
     * Generated from protobuf field <code>int64 estimated_memory_bytes = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setEstimatedMemoryBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->estimated_memory_bytes = $var;

        return $this;
    }

}

