<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/resultstore/v2/test_suite.proto

namespace Google\Devtools\Resultstore\V2\TestCase;

/**
 * The result of running a test case.
 *
 * Protobuf type <code>google.devtools.resultstore.v2.TestCase.Result</code>
 */
class Result
{
    /**
     * The implicit default enum value. Do not use.
     *
     * Generated from protobuf enum <code>RESULT_UNSPECIFIED = 0;</code>
     */
    const RESULT_UNSPECIFIED = 0;
    /**
     * Test case ran to completion. Look for failures or errors to determine
     * whether it passed, failed, or errored.
     *
     * Generated from protobuf enum <code>COMPLETED = 1;</code>
     */
    const COMPLETED = 1;
    /**
     * Test case started but did not complete because the test harness received
     * a signal and decided to stop running tests.
     *
     * Generated from protobuf enum <code>INTERRUPTED = 2;</code>
     */
    const INTERRUPTED = 2;
    /**
     * Test case was not started because the test harness received a SIGINT or
     * timed out.
     *
     * Generated from protobuf enum <code>CANCELLED = 3;</code>
     */
    const CANCELLED = 3;
    /**
     * Test case was not run because the user or process running the test
     * specified a filter that excluded this test case.
     *
     * Generated from protobuf enum <code>FILTERED = 4;</code>
     */
    const FILTERED = 4;
    /**
     * Test case was not run to completion because the test case decided it
     * should not be run (eg. due to a failed assumption in a JUnit4 test).
     * Per-test setup or tear-down may or may not have run.
     *
     * Generated from protobuf enum <code>SKIPPED = 5;</code>
     */
    const SKIPPED = 5;
    /**
     * The test framework did not run the test case because it was labeled as
     * suppressed.  Eg. if someone temporarily disables a failing test.
     *
     * Generated from protobuf enum <code>SUPPRESSED = 6;</code>
     */
    const SUPPRESSED = 6;
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Result::class, \Google\Devtools\Resultstore\V2\TestCase_Result::class);

