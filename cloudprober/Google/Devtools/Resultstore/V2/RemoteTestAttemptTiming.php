<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/resultstore/v2/action.proto

namespace Google\Devtools\Resultstore\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Timing data for one attempt to execute a test action remotely.
 *
 * Generated from protobuf message <code>google.devtools.resultstore.v2.RemoteTestAttemptTiming</code>
 */
class RemoteTestAttemptTiming extends \Google\Protobuf\Internal\Message
{
    /**
     * Idle period before the test process is invoked on the remote machine.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration queue_duration = 1;</code>
     */
    private $queue_duration = null;
    /**
     * Time to upload data dependencies from the local machine to the remote
     * machine running the test, or to the distributed cache.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration upload_duration = 2;</code>
     */
    private $upload_duration = null;
    /**
     * Time to set up the remote machine.
     * Not to be confused with setup time in
     * xUnit test frameworks, which falls within the test_process_time.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration machine_setup_duration = 3;</code>
     */
    private $machine_setup_duration = null;
    /**
     * Time taken by the test process, typically surrounded by a small wrapper
     * script.
     * For Java tests, this includes JVM setup, flag parsing, class path setup,
     * parsing files to setup the suite, and finally running your test methods.
     * In many cases, only a small fraction of the test process time is spent
     * running the test methods.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration test_process_duration = 4;</code>
     */
    private $test_process_duration = null;
    /**
     * Time spent retrieving test logs and any other test outputs, back to the
     * local machine.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration download_duration = 5;</code>
     */
    private $download_duration = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Duration $queue_duration
     *           Idle period before the test process is invoked on the remote machine.
     *     @type \Google\Protobuf\Duration $upload_duration
     *           Time to upload data dependencies from the local machine to the remote
     *           machine running the test, or to the distributed cache.
     *     @type \Google\Protobuf\Duration $machine_setup_duration
     *           Time to set up the remote machine.
     *           Not to be confused with setup time in
     *           xUnit test frameworks, which falls within the test_process_time.
     *     @type \Google\Protobuf\Duration $test_process_duration
     *           Time taken by the test process, typically surrounded by a small wrapper
     *           script.
     *           For Java tests, this includes JVM setup, flag parsing, class path setup,
     *           parsing files to setup the suite, and finally running your test methods.
     *           In many cases, only a small fraction of the test process time is spent
     *           running the test methods.
     *     @type \Google\Protobuf\Duration $download_duration
     *           Time spent retrieving test logs and any other test outputs, back to the
     *           local machine.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Resultstore\V2\Action::initOnce();
        parent::__construct($data);
    }

    /**
     * Idle period before the test process is invoked on the remote machine.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration queue_duration = 1;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getQueueDuration()
    {
        return $this->queue_duration;
    }

    /**
     * Idle period before the test process is invoked on the remote machine.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration queue_duration = 1;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setQueueDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->queue_duration = $var;

        return $this;
    }

    /**
     * Time to upload data dependencies from the local machine to the remote
     * machine running the test, or to the distributed cache.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration upload_duration = 2;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getUploadDuration()
    {
        return $this->upload_duration;
    }

    /**
     * Time to upload data dependencies from the local machine to the remote
     * machine running the test, or to the distributed cache.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration upload_duration = 2;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setUploadDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->upload_duration = $var;

        return $this;
    }

    /**
     * Time to set up the remote machine.
     * Not to be confused with setup time in
     * xUnit test frameworks, which falls within the test_process_time.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration machine_setup_duration = 3;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getMachineSetupDuration()
    {
        return $this->machine_setup_duration;
    }

    /**
     * Time to set up the remote machine.
     * Not to be confused with setup time in
     * xUnit test frameworks, which falls within the test_process_time.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration machine_setup_duration = 3;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMachineSetupDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->machine_setup_duration = $var;

        return $this;
    }

    /**
     * Time taken by the test process, typically surrounded by a small wrapper
     * script.
     * For Java tests, this includes JVM setup, flag parsing, class path setup,
     * parsing files to setup the suite, and finally running your test methods.
     * In many cases, only a small fraction of the test process time is spent
     * running the test methods.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration test_process_duration = 4;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getTestProcessDuration()
    {
        return $this->test_process_duration;
    }

    /**
     * Time taken by the test process, typically surrounded by a small wrapper
     * script.
     * For Java tests, this includes JVM setup, flag parsing, class path setup,
     * parsing files to setup the suite, and finally running your test methods.
     * In many cases, only a small fraction of the test process time is spent
     * running the test methods.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration test_process_duration = 4;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTestProcessDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->test_process_duration = $var;

        return $this;
    }

    /**
     * Time spent retrieving test logs and any other test outputs, back to the
     * local machine.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration download_duration = 5;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getDownloadDuration()
    {
        return $this->download_duration;
    }

    /**
     * Time spent retrieving test logs and any other test outputs, back to the
     * local machine.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration download_duration = 5;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setDownloadDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->download_duration = $var;

        return $this;
    }

}

