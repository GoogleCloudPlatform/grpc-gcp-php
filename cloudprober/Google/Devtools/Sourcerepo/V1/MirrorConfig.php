<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/sourcerepo/v1/sourcerepo.proto

namespace Google\Devtools\Sourcerepo\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configuration to automatically mirror a repository from another
 * hosting service, for example GitHub or BitBucket.
 *
 * Generated from protobuf message <code>google.devtools.sourcerepo.v1.MirrorConfig</code>
 */
class MirrorConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * URL of the main repository at the other hosting service.
     *
     * Generated from protobuf field <code>string url = 1;</code>
     */
    private $url = '';
    /**
     * ID of the webhook listening to updates to trigger mirroring.
     * Removing this webhook from the other hosting service will stop
     * Google Cloud Source Repositories from receiving notifications,
     * and thereby disabling mirroring.
     *
     * Generated from protobuf field <code>string webhook_id = 2;</code>
     */
    private $webhook_id = '';
    /**
     * ID of the SSH deploy key at the other hosting service.
     * Removing this key from the other service would deauthorize
     * Google Cloud Source Repositories from mirroring.
     *
     * Generated from protobuf field <code>string deploy_key_id = 3;</code>
     */
    private $deploy_key_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $url
     *           URL of the main repository at the other hosting service.
     *     @type string $webhook_id
     *           ID of the webhook listening to updates to trigger mirroring.
     *           Removing this webhook from the other hosting service will stop
     *           Google Cloud Source Repositories from receiving notifications,
     *           and thereby disabling mirroring.
     *     @type string $deploy_key_id
     *           ID of the SSH deploy key at the other hosting service.
     *           Removing this key from the other service would deauthorize
     *           Google Cloud Source Repositories from mirroring.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Sourcerepo\V1\Sourcerepo::initOnce();
        parent::__construct($data);
    }

    /**
     * URL of the main repository at the other hosting service.
     *
     * Generated from protobuf field <code>string url = 1;</code>
     * @return string
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * URL of the main repository at the other hosting service.
     *
     * Generated from protobuf field <code>string url = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->url = $var;

        return $this;
    }

    /**
     * ID of the webhook listening to updates to trigger mirroring.
     * Removing this webhook from the other hosting service will stop
     * Google Cloud Source Repositories from receiving notifications,
     * and thereby disabling mirroring.
     *
     * Generated from protobuf field <code>string webhook_id = 2;</code>
     * @return string
     */
    public function getWebhookId()
    {
        return $this->webhook_id;
    }

    /**
     * ID of the webhook listening to updates to trigger mirroring.
     * Removing this webhook from the other hosting service will stop
     * Google Cloud Source Repositories from receiving notifications,
     * and thereby disabling mirroring.
     *
     * Generated from protobuf field <code>string webhook_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setWebhookId($var)
    {
        GPBUtil::checkString($var, True);
        $this->webhook_id = $var;

        return $this;
    }

    /**
     * ID of the SSH deploy key at the other hosting service.
     * Removing this key from the other service would deauthorize
     * Google Cloud Source Repositories from mirroring.
     *
     * Generated from protobuf field <code>string deploy_key_id = 3;</code>
     * @return string
     */
    public function getDeployKeyId()
    {
        return $this->deploy_key_id;
    }

    /**
     * ID of the SSH deploy key at the other hosting service.
     * Removing this key from the other service would deauthorize
     * Google Cloud Source Repositories from mirroring.
     *
     * Generated from protobuf field <code>string deploy_key_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDeployKeyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->deploy_key_id = $var;

        return $this;
    }

}

