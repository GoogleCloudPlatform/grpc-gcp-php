<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteexecution/v1test/remote_execution.proto

namespace Google\Devtools\Remoteexecution\V1test;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A `Tree` contains all the
 * [Directory][google.devtools.remoteexecution.v1test.Directory] protos in a
 * single directory Merkle tree, compressed into one message.
 *
 * Generated from protobuf message <code>google.devtools.remoteexecution.v1test.Tree</code>
 */
class Tree extends \Google\Protobuf\Internal\Message
{
    /**
     * The root directory in the tree.
     *
     * Generated from protobuf field <code>.google.devtools.remoteexecution.v1test.Directory root = 1;</code>
     */
    private $root = null;
    /**
     * All the child directories: the directories referred to by the root and,
     * recursively, all its children. In order to reconstruct the directory tree,
     * the client must take the digests of each of the child directories and then
     * build up a tree starting from the `root`.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteexecution.v1test.Directory children = 2;</code>
     */
    private $children;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Remoteexecution\V1test\Directory $root
     *           The root directory in the tree.
     *     @type \Google\Devtools\Remoteexecution\V1test\Directory[]|\Google\Protobuf\Internal\RepeatedField $children
     *           All the child directories: the directories referred to by the root and,
     *           recursively, all its children. In order to reconstruct the directory tree,
     *           the client must take the digests of each of the child directories and then
     *           build up a tree starting from the `root`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Remoteexecution\V1Test\RemoteExecution::initOnce();
        parent::__construct($data);
    }

    /**
     * The root directory in the tree.
     *
     * Generated from protobuf field <code>.google.devtools.remoteexecution.v1test.Directory root = 1;</code>
     * @return \Google\Devtools\Remoteexecution\V1test\Directory
     */
    public function getRoot()
    {
        return $this->root;
    }

    /**
     * The root directory in the tree.
     *
     * Generated from protobuf field <code>.google.devtools.remoteexecution.v1test.Directory root = 1;</code>
     * @param \Google\Devtools\Remoteexecution\V1test\Directory $var
     * @return $this
     */
    public function setRoot($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Remoteexecution\V1test\Directory::class);
        $this->root = $var;

        return $this;
    }

    /**
     * All the child directories: the directories referred to by the root and,
     * recursively, all its children. In order to reconstruct the directory tree,
     * the client must take the digests of each of the child directories and then
     * build up a tree starting from the `root`.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteexecution.v1test.Directory children = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getChildren()
    {
        return $this->children;
    }

    /**
     * All the child directories: the directories referred to by the root and,
     * recursively, all its children. In order to reconstruct the directory tree,
     * the client must take the digests of each of the child directories and then
     * build up a tree starting from the `root`.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteexecution.v1test.Directory children = 2;</code>
     * @param \Google\Devtools\Remoteexecution\V1test\Directory[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setChildren($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Remoteexecution\V1test\Directory::class);
        $this->children = $arr;

        return $this;
    }

}

