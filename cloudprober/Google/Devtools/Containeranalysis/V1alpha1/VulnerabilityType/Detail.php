<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto

namespace Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Identifies all occurrences of this vulnerability in the package for a
 * specific distro/location
 * For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2
 *
 * Generated from protobuf message <code>google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail</code>
 */
class Detail extends \Google\Protobuf\Internal\Message
{
    /**
     * The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in
     * which the vulnerability manifests.  Examples include distro or storage
     * location for vulnerable jar.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>string cpe_uri = 1;</code>
     */
    private $cpe_uri = '';
    /**
     * The name of the package where the vulnerability was found.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>string package = 8;</code>
     */
    private $package = '';
    /**
     * The min version of the package in which the vulnerability exists.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version min_affected_version = 6;</code>
     */
    private $min_affected_version = null;
    /**
     * The max version of the package in which the vulnerability exists.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version max_affected_version = 7;</code>
     */
    private $max_affected_version = null;
    /**
     * The severity (eg: distro assigned severity) for this vulnerability.
     *
     * Generated from protobuf field <code>string severity_name = 4;</code>
     */
    private $severity_name = '';
    /**
     * A vendor-specific description of this note.
     *
     * Generated from protobuf field <code>string description = 9;</code>
     */
    private $description = '';
    /**
     * The fix for this specific package version.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 5;</code>
     */
    private $fixed_location = null;
    /**
     * The type of package; whether native or non native(ruby gems,
     * node.js packages etc)
     *
     * Generated from protobuf field <code>string package_type = 10;</code>
     */
    private $package_type = '';
    /**
     * Whether this Detail is obsolete. Occurrences are expected not to point to
     * obsolete details.
     *
     * Generated from protobuf field <code>bool is_obsolete = 11;</code>
     */
    private $is_obsolete = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cpe_uri
     *           The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in
     *           which the vulnerability manifests.  Examples include distro or storage
     *           location for vulnerable jar.
     *           This field can be used as a filter in list requests.
     *     @type string $package
     *           The name of the package where the vulnerability was found.
     *           This field can be used as a filter in list requests.
     *     @type \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\Version $min_affected_version
     *           The min version of the package in which the vulnerability exists.
     *     @type \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\Version $max_affected_version
     *           The max version of the package in which the vulnerability exists.
     *           This field can be used as a filter in list requests.
     *     @type string $severity_name
     *           The severity (eg: distro assigned severity) for this vulnerability.
     *     @type string $description
     *           A vendor-specific description of this note.
     *     @type \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\VulnerabilityLocation $fixed_location
     *           The fix for this specific package version.
     *     @type string $package_type
     *           The type of package; whether native or non native(ruby gems,
     *           node.js packages etc)
     *     @type bool $is_obsolete
     *           Whether this Detail is obsolete. Occurrences are expected not to point to
     *           obsolete details.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Containeranalysis\V1Alpha1\PackageVulnerability::initOnce();
        parent::__construct($data);
    }

    /**
     * The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in
     * which the vulnerability manifests.  Examples include distro or storage
     * location for vulnerable jar.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>string cpe_uri = 1;</code>
     * @return string
     */
    public function getCpeUri()
    {
        return $this->cpe_uri;
    }

    /**
     * The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in
     * which the vulnerability manifests.  Examples include distro or storage
     * location for vulnerable jar.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>string cpe_uri = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCpeUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->cpe_uri = $var;

        return $this;
    }

    /**
     * The name of the package where the vulnerability was found.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>string package = 8;</code>
     * @return string
     */
    public function getPackage()
    {
        return $this->package;
    }

    /**
     * The name of the package where the vulnerability was found.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>string package = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setPackage($var)
    {
        GPBUtil::checkString($var, True);
        $this->package = $var;

        return $this;
    }

    /**
     * The min version of the package in which the vulnerability exists.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version min_affected_version = 6;</code>
     * @return \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\Version
     */
    public function getMinAffectedVersion()
    {
        return $this->min_affected_version;
    }

    /**
     * The min version of the package in which the vulnerability exists.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version min_affected_version = 6;</code>
     * @param \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\Version $var
     * @return $this
     */
    public function setMinAffectedVersion($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType_Version::class);
        $this->min_affected_version = $var;

        return $this;
    }

    /**
     * The max version of the package in which the vulnerability exists.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version max_affected_version = 7;</code>
     * @return \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\Version
     */
    public function getMaxAffectedVersion()
    {
        return $this->max_affected_version;
    }

    /**
     * The max version of the package in which the vulnerability exists.
     * This field can be used as a filter in list requests.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version max_affected_version = 7;</code>
     * @param \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\Version $var
     * @return $this
     */
    public function setMaxAffectedVersion($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType_Version::class);
        $this->max_affected_version = $var;

        return $this;
    }

    /**
     * The severity (eg: distro assigned severity) for this vulnerability.
     *
     * Generated from protobuf field <code>string severity_name = 4;</code>
     * @return string
     */
    public function getSeverityName()
    {
        return $this->severity_name;
    }

    /**
     * The severity (eg: distro assigned severity) for this vulnerability.
     *
     * Generated from protobuf field <code>string severity_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setSeverityName($var)
    {
        GPBUtil::checkString($var, True);
        $this->severity_name = $var;

        return $this;
    }

    /**
     * A vendor-specific description of this note.
     *
     * Generated from protobuf field <code>string description = 9;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * A vendor-specific description of this note.
     *
     * Generated from protobuf field <code>string description = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * The fix for this specific package version.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 5;</code>
     * @return \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\VulnerabilityLocation
     */
    public function getFixedLocation()
    {
        return $this->fixed_location;
    }

    /**
     * The fix for this specific package version.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation fixed_location = 5;</code>
     * @param \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType\VulnerabilityLocation $var
     * @return $this
     */
    public function setFixedLocation($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType_VulnerabilityLocation::class);
        $this->fixed_location = $var;

        return $this;
    }

    /**
     * The type of package; whether native or non native(ruby gems,
     * node.js packages etc)
     *
     * Generated from protobuf field <code>string package_type = 10;</code>
     * @return string
     */
    public function getPackageType()
    {
        return $this->package_type;
    }

    /**
     * The type of package; whether native or non native(ruby gems,
     * node.js packages etc)
     *
     * Generated from protobuf field <code>string package_type = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setPackageType($var)
    {
        GPBUtil::checkString($var, True);
        $this->package_type = $var;

        return $this;
    }

    /**
     * Whether this Detail is obsolete. Occurrences are expected not to point to
     * obsolete details.
     *
     * Generated from protobuf field <code>bool is_obsolete = 11;</code>
     * @return bool
     */
    public function getIsObsolete()
    {
        return $this->is_obsolete;
    }

    /**
     * Whether this Detail is obsolete. Occurrences are expected not to point to
     * obsolete details.
     *
     * Generated from protobuf field <code>bool is_obsolete = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsObsolete($var)
    {
        GPBUtil::checkBool($var);
        $this->is_obsolete = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Detail::class, \Google\Devtools\Containeranalysis\V1alpha1\VulnerabilityType_Detail::class);

