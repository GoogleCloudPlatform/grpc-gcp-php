<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/containeranalysis/v1alpha1/image_basis.proto

namespace Google\Devtools\Containeranalysis\V1alpha1\DockerImage;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Layer holds metadata specific to a layer of a Docker image.
 *
 * Generated from protobuf message <code>google.devtools.containeranalysis.v1alpha1.DockerImage.Layer</code>
 */
class Layer extends \Google\Protobuf\Internal\Message
{
    /**
     * The recovered Dockerfile directive used to construct this layer.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.Directive directive = 1;</code>
     */
    private $directive = 0;
    /**
     * The recovered arguments to the Dockerfile directive.
     *
     * Generated from protobuf field <code>string arguments = 2;</code>
     */
    private $arguments = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $directive
     *           The recovered Dockerfile directive used to construct this layer.
     *     @type string $arguments
     *           The recovered arguments to the Dockerfile directive.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Containeranalysis\V1Alpha1\ImageBasis::initOnce();
        parent::__construct($data);
    }

    /**
     * The recovered Dockerfile directive used to construct this layer.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.Directive directive = 1;</code>
     * @return int
     */
    public function getDirective()
    {
        return $this->directive;
    }

    /**
     * The recovered Dockerfile directive used to construct this layer.
     *
     * Generated from protobuf field <code>.google.devtools.containeranalysis.v1alpha1.DockerImage.Layer.Directive directive = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setDirective($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Containeranalysis\V1alpha1\DockerImage_Layer_Directive::class);
        $this->directive = $var;

        return $this;
    }

    /**
     * The recovered arguments to the Dockerfile directive.
     *
     * Generated from protobuf field <code>string arguments = 2;</code>
     * @return string
     */
    public function getArguments()
    {
        return $this->arguments;
    }

    /**
     * The recovered arguments to the Dockerfile directive.
     *
     * Generated from protobuf field <code>string arguments = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setArguments($var)
    {
        GPBUtil::checkString($var, True);
        $this->arguments = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Layer::class, \Google\Devtools\Containeranalysis\V1alpha1\DockerImage_Layer::class);

