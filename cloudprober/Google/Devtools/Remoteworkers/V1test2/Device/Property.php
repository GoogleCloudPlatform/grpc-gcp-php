<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteworkers/v1test2/worker.proto

namespace Google\Devtools\Remoteworkers\V1test2\Device;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A device property; see `properties` for more information.
 *
 * Generated from protobuf message <code>google.devtools.remoteworkers.v1test2.Device.Property</code>
 */
class Property extends \Google\Protobuf\Internal\Message
{
    /**
     * For general information on keys, see the documentation to `Worker`.
     * The current set of standard keys are:
     * * os: a human-readable description of the OS. Examples include `linux`,
     * `ubuntu` and `ubuntu 14.04` (note that a bot may advertise itself as more
     * than one). This will be replaced in the future by more well-structured
     * keys and values to represent OS variants.
     * * has-docker: "true" if the bot has Docker installed. This will be
     * replaced in the future by a more structured message for Docker support.
     *
     * Generated from protobuf field <code>string key = 1;</code>
     */
    private $key = '';
    /**
     * The property's value.
     *
     * Generated from protobuf field <code>string value = 2;</code>
     */
    private $value = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $key
     *           For general information on keys, see the documentation to `Worker`.
     *           The current set of standard keys are:
     *           * os: a human-readable description of the OS. Examples include `linux`,
     *           `ubuntu` and `ubuntu 14.04` (note that a bot may advertise itself as more
     *           than one). This will be replaced in the future by more well-structured
     *           keys and values to represent OS variants.
     *           * has-docker: "true" if the bot has Docker installed. This will be
     *           replaced in the future by a more structured message for Docker support.
     *     @type string $value
     *           The property's value.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Remoteworkers\V1Test2\Worker::initOnce();
        parent::__construct($data);
    }

    /**
     * For general information on keys, see the documentation to `Worker`.
     * The current set of standard keys are:
     * * os: a human-readable description of the OS. Examples include `linux`,
     * `ubuntu` and `ubuntu 14.04` (note that a bot may advertise itself as more
     * than one). This will be replaced in the future by more well-structured
     * keys and values to represent OS variants.
     * * has-docker: "true" if the bot has Docker installed. This will be
     * replaced in the future by a more structured message for Docker support.
     *
     * Generated from protobuf field <code>string key = 1;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * For general information on keys, see the documentation to `Worker`.
     * The current set of standard keys are:
     * * os: a human-readable description of the OS. Examples include `linux`,
     * `ubuntu` and `ubuntu 14.04` (note that a bot may advertise itself as more
     * than one). This will be replaced in the future by more well-structured
     * keys and values to represent OS variants.
     * * has-docker: "true" if the bot has Docker installed. This will be
     * replaced in the future by a more structured message for Docker support.
     *
     * Generated from protobuf field <code>string key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     * The property's value.
     *
     * Generated from protobuf field <code>string value = 2;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * The property's value.
     *
     * Generated from protobuf field <code>string value = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->value = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Property::class, \Google\Devtools\Remoteworkers\V1test2\Device_Property::class);

