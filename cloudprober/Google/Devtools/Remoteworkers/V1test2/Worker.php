<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteworkers/v1test2/worker.proto

namespace Google\Devtools\Remoteworkers\V1test2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes a worker, which is a list of one or more devices and the
 * connections between them. A device could be a computer, a phone, or even an
 * accelerator like a GPU; it's up to the farm administrator to decide how to
 * model their farm. For example, if a farm only has one type of GPU, the GPU
 * could be modelled as a "has_gpu" property on its host computer; if it has
 * many subproperties itself, it might be better to model it as a separate
 * device.
 * The first device in the worker is the "primary device" - that is, the device
 * running a bot and which is responsible for actually executing commands. All
 * other devices are considered to be attached devices, and must be controllable
 * by the primary device.
 * This message (and all its submessages) can be used in two contexts:
 * * Status: sent by the bot to report the current capabilities of the device to
 * allow reservation matching.
 * * Request: sent by a client to request a device with certain capabilities in
 * a reservation.
 * Several of the fields in this message have different semantics depending on
 * which of which of these contexts it is used. These semantics are described
 * below.
 * Several messages in Worker and its submessages have the concept of keys and
 * values, such as `Worker.Property` and `Device.Property`. All keys are simple
 * strings, but certain keys are "standard" keys and should be broadly supported
 * across farms and implementations; these are listed below each relevant
 * message. Bot implementations or farm admins may add *additional* keys, but
 * these SHOULD all begin with an underscore so they do not conflict with
 * standard keys that may be added in the future.
 * Keys are not context sensitive.
 * See http://goo.gl/NurY8g for more information on the Worker message.
 *
 * Generated from protobuf message <code>google.devtools.remoteworkers.v1test2.Worker</code>
 */
class Worker extends \Google\Protobuf\Internal\Message
{
    /**
     * A list of devices; the first device is the primary device. See the `Device`
     * message for more information.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Device devices = 1;</code>
     */
    private $devices;
    /**
     * A worker may contain "global" properties. For example, certain machines
     * might be reserved for certain types of jobs, like short-running compilation
     * versus long-running integration tests. This property is known as a "pool"
     * and is not related to any one device within the worker; rather, it applies
     * to the worker as a whole.
     * The behaviour of repeated keys is identical to that of Device.Property.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Worker.Property properties = 2;</code>
     */
    private $properties;
    /**
     * Bots can be configured in certain ways when accepting leases. For example,
     * many leases are executed inside a Docker container. To support this, the
     * bot needs to be able to report that it has Docker installed (and knows how
     * to execute something inside a container), and the task submitter needs to
     * specify which image should be used to start the container. Similarly, a
     * lease may be able to run as one of several users on the worker; in such
     * cases, the bot needs to report what users are available, and the submitter
     * needs to choose one.
     * Therefore, when this message is reported by the bot to the service, each
     * key represents a *type* of configuration that the bot knows how to set,
     * while each *value* represents a legal value for that configuration (the
     * empty string is interpretted as a wildcard, such as for Docker images).
     * When this message is sent by the server to the bot in the context of a
     * lease, it represents a command to the bot to apply the setting. Keys may
     * be repeated during reporting but not in a lease.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Worker.Config configs = 3;</code>
     */
    private $configs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Devtools\Remoteworkers\V1test2\Device[]|\Google\Protobuf\Internal\RepeatedField $devices
     *           A list of devices; the first device is the primary device. See the `Device`
     *           message for more information.
     *     @type \Google\Devtools\Remoteworkers\V1test2\Worker\Property[]|\Google\Protobuf\Internal\RepeatedField $properties
     *           A worker may contain "global" properties. For example, certain machines
     *           might be reserved for certain types of jobs, like short-running compilation
     *           versus long-running integration tests. This property is known as a "pool"
     *           and is not related to any one device within the worker; rather, it applies
     *           to the worker as a whole.
     *           The behaviour of repeated keys is identical to that of Device.Property.
     *     @type \Google\Devtools\Remoteworkers\V1test2\Worker\Config[]|\Google\Protobuf\Internal\RepeatedField $configs
     *           Bots can be configured in certain ways when accepting leases. For example,
     *           many leases are executed inside a Docker container. To support this, the
     *           bot needs to be able to report that it has Docker installed (and knows how
     *           to execute something inside a container), and the task submitter needs to
     *           specify which image should be used to start the container. Similarly, a
     *           lease may be able to run as one of several users on the worker; in such
     *           cases, the bot needs to report what users are available, and the submitter
     *           needs to choose one.
     *           Therefore, when this message is reported by the bot to the service, each
     *           key represents a *type* of configuration that the bot knows how to set,
     *           while each *value* represents a legal value for that configuration (the
     *           empty string is interpretted as a wildcard, such as for Docker images).
     *           When this message is sent by the server to the bot in the context of a
     *           lease, it represents a command to the bot to apply the setting. Keys may
     *           be repeated during reporting but not in a lease.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Remoteworkers\V1Test2\Worker::initOnce();
        parent::__construct($data);
    }

    /**
     * A list of devices; the first device is the primary device. See the `Device`
     * message for more information.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Device devices = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDevices()
    {
        return $this->devices;
    }

    /**
     * A list of devices; the first device is the primary device. See the `Device`
     * message for more information.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Device devices = 1;</code>
     * @param \Google\Devtools\Remoteworkers\V1test2\Device[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDevices($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Remoteworkers\V1test2\Device::class);
        $this->devices = $arr;

        return $this;
    }

    /**
     * A worker may contain "global" properties. For example, certain machines
     * might be reserved for certain types of jobs, like short-running compilation
     * versus long-running integration tests. This property is known as a "pool"
     * and is not related to any one device within the worker; rather, it applies
     * to the worker as a whole.
     * The behaviour of repeated keys is identical to that of Device.Property.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Worker.Property properties = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProperties()
    {
        return $this->properties;
    }

    /**
     * A worker may contain "global" properties. For example, certain machines
     * might be reserved for certain types of jobs, like short-running compilation
     * versus long-running integration tests. This property is known as a "pool"
     * and is not related to any one device within the worker; rather, it applies
     * to the worker as a whole.
     * The behaviour of repeated keys is identical to that of Device.Property.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Worker.Property properties = 2;</code>
     * @param \Google\Devtools\Remoteworkers\V1test2\Worker\Property[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProperties($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Remoteworkers\V1test2\Worker\Property::class);
        $this->properties = $arr;

        return $this;
    }

    /**
     * Bots can be configured in certain ways when accepting leases. For example,
     * many leases are executed inside a Docker container. To support this, the
     * bot needs to be able to report that it has Docker installed (and knows how
     * to execute something inside a container), and the task submitter needs to
     * specify which image should be used to start the container. Similarly, a
     * lease may be able to run as one of several users on the worker; in such
     * cases, the bot needs to report what users are available, and the submitter
     * needs to choose one.
     * Therefore, when this message is reported by the bot to the service, each
     * key represents a *type* of configuration that the bot knows how to set,
     * while each *value* represents a legal value for that configuration (the
     * empty string is interpretted as a wildcard, such as for Docker images).
     * When this message is sent by the server to the bot in the context of a
     * lease, it represents a command to the bot to apply the setting. Keys may
     * be repeated during reporting but not in a lease.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Worker.Config configs = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getConfigs()
    {
        return $this->configs;
    }

    /**
     * Bots can be configured in certain ways when accepting leases. For example,
     * many leases are executed inside a Docker container. To support this, the
     * bot needs to be able to report that it has Docker installed (and knows how
     * to execute something inside a container), and the task submitter needs to
     * specify which image should be used to start the container. Similarly, a
     * lease may be able to run as one of several users on the worker; in such
     * cases, the bot needs to report what users are available, and the submitter
     * needs to choose one.
     * Therefore, when this message is reported by the bot to the service, each
     * key represents a *type* of configuration that the bot knows how to set,
     * while each *value* represents a legal value for that configuration (the
     * empty string is interpretted as a wildcard, such as for Docker images).
     * When this message is sent by the server to the bot in the context of a
     * lease, it represents a command to the bot to apply the setting. Keys may
     * be repeated during reporting but not in a lease.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteworkers.v1test2.Worker.Config configs = 3;</code>
     * @param \Google\Devtools\Remoteworkers\V1test2\Worker\Config[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setConfigs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Remoteworkers\V1test2\Worker\Config::class);
        $this->configs = $arr;

        return $this;
    }

}

