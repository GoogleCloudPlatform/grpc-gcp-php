<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteworkers/v1test2/command.proto

namespace Google\Devtools\Remoteworkers\V1test2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The CommandTask and CommandResult messages assume the existence of a service
 * that can serve blobs of content, identified by a hash and size known as a
 * "digest." The method by which these blobs may be retrieved is not specified
 * here, but a model implementation is in the Remote Execution API's
 * "ContentAddressibleStorage" interface.
 * In the context of the RWAPI, a Digest will virtually always refer to the
 * contents of a file or a directory. The latter is represented by the
 * byte-encoded Directory message.
 *
 * Generated from protobuf message <code>google.devtools.remoteworkers.v1test2.Digest</code>
 */
class Digest extends \Google\Protobuf\Internal\Message
{
    /**
     * A string-encoded hash (eg "1a2b3c", not the byte array [0x1a, 0x2b, 0x3c])
     * using an implementation-defined hash algorithm (eg SHA-256).
     *
     * Generated from protobuf field <code>string hash = 1;</code>
     */
    private $hash = '';
    /**
     * The size of the contents. While this is not strictly required as part of an
     * identifier (after all, any given hash will have exactly one canonical
     * size), it's useful in almost all cases when one might want to send or
     * retrieve blobs of content and is included here for this reason.
     *
     * Generated from protobuf field <code>int64 size_bytes = 2;</code>
     */
    private $size_bytes = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $hash
     *           A string-encoded hash (eg "1a2b3c", not the byte array [0x1a, 0x2b, 0x3c])
     *           using an implementation-defined hash algorithm (eg SHA-256).
     *     @type int|string $size_bytes
     *           The size of the contents. While this is not strictly required as part of an
     *           identifier (after all, any given hash will have exactly one canonical
     *           size), it's useful in almost all cases when one might want to send or
     *           retrieve blobs of content and is included here for this reason.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Remoteworkers\V1Test2\Command::initOnce();
        parent::__construct($data);
    }

    /**
     * A string-encoded hash (eg "1a2b3c", not the byte array [0x1a, 0x2b, 0x3c])
     * using an implementation-defined hash algorithm (eg SHA-256).
     *
     * Generated from protobuf field <code>string hash = 1;</code>
     * @return string
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     * A string-encoded hash (eg "1a2b3c", not the byte array [0x1a, 0x2b, 0x3c])
     * using an implementation-defined hash algorithm (eg SHA-256).
     *
     * Generated from protobuf field <code>string hash = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setHash($var)
    {
        GPBUtil::checkString($var, True);
        $this->hash = $var;

        return $this;
    }

    /**
     * The size of the contents. While this is not strictly required as part of an
     * identifier (after all, any given hash will have exactly one canonical
     * size), it's useful in almost all cases when one might want to send or
     * retrieve blobs of content and is included here for this reason.
     *
     * Generated from protobuf field <code>int64 size_bytes = 2;</code>
     * @return int|string
     */
    public function getSizeBytes()
    {
        return $this->size_bytes;
    }

    /**
     * The size of the contents. While this is not strictly required as part of an
     * identifier (after all, any given hash will have exactly one canonical
     * size), it's useful in almost all cases when one might want to send or
     * retrieve blobs of content and is included here for this reason.
     *
     * Generated from protobuf field <code>int64 size_bytes = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSizeBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->size_bytes = $var;

        return $this;
    }

}

