<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/genomics/v1/reads.proto

namespace Google\Genomics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The stream reads request.
 *
 * Generated from protobuf message <code>google.genomics.v1.StreamReadsRequest</code>
 */
class StreamReadsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     */
    private $project_id = '';
    /**
     * The ID of the read group set from which to stream reads.
     *
     * Generated from protobuf field <code>string read_group_set_id = 2;</code>
     */
    private $read_group_set_id = '';
    /**
     * The reference sequence name, for example `chr1`,
     * `1`, or `chrX`. If set to *, only unmapped reads are
     * returned.
     *
     * Generated from protobuf field <code>string reference_name = 3;</code>
     */
    private $reference_name = '';
    /**
     * The start position of the range on the reference, 0-based inclusive. If
     * specified, `referenceName` must also be specified.
     *
     * Generated from protobuf field <code>int64 start = 4;</code>
     */
    private $start = 0;
    /**
     * The end position of the range on the reference, 0-based exclusive. If
     * specified, `referenceName` must also be specified.
     *
     * Generated from protobuf field <code>int64 end = 5;</code>
     */
    private $end = 0;
    /**
     * Restricts results to a shard containing approximately `1/totalShards`
     * of the normal response payload for this query. Results from a sharded
     * request are disjoint from those returned by all queries which differ only
     * in their shard parameter. A shard may yield 0 results; this is especially
     * likely for large values of `totalShards`.
     * Valid values are `[0, totalShards)`.
     *
     * Generated from protobuf field <code>int32 shard = 6;</code>
     */
    private $shard = 0;
    /**
     * Specifying `totalShards` causes a disjoint subset of the normal response
     * payload to be returned for each query with a unique `shard` parameter
     * specified. A best effort is made to yield equally sized shards. Sharding
     * can be used to distribute processing amongst workers, where each worker is
     * assigned a unique `shard` number and all workers specify the same
     * `totalShards` number. The union of reads returned for all sharded queries
     * `[0, totalShards)` is equal to those returned by a single unsharded query.
     * Queries for different values of `totalShards` with common divisors will
     * share shard boundaries. For example, streaming `shard` 2 of 5
     * `totalShards` yields the same results as streaming `shard`s 4 and 5 of 10
     * `totalShards`. This property can be leveraged for adaptive retries.
     *
     * Generated from protobuf field <code>int32 total_shards = 7;</code>
     */
    private $total_shards = 0;

    public function __construct() {
        \GPBMetadata\Google\Genomics\V1\Reads::initOnce();
        parent::__construct();
    }

    /**
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * The Google Cloud project ID which will be billed
     * for this access. The caller must have WRITE access to this project.
     * Required.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * The ID of the read group set from which to stream reads.
     *
     * Generated from protobuf field <code>string read_group_set_id = 2;</code>
     * @return string
     */
    public function getReadGroupSetId()
    {
        return $this->read_group_set_id;
    }

    /**
     * The ID of the read group set from which to stream reads.
     *
     * Generated from protobuf field <code>string read_group_set_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setReadGroupSetId($var)
    {
        GPBUtil::checkString($var, True);
        $this->read_group_set_id = $var;

        return $this;
    }

    /**
     * The reference sequence name, for example `chr1`,
     * `1`, or `chrX`. If set to *, only unmapped reads are
     * returned.
     *
     * Generated from protobuf field <code>string reference_name = 3;</code>
     * @return string
     */
    public function getReferenceName()
    {
        return $this->reference_name;
    }

    /**
     * The reference sequence name, for example `chr1`,
     * `1`, or `chrX`. If set to *, only unmapped reads are
     * returned.
     *
     * Generated from protobuf field <code>string reference_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setReferenceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference_name = $var;

        return $this;
    }

    /**
     * The start position of the range on the reference, 0-based inclusive. If
     * specified, `referenceName` must also be specified.
     *
     * Generated from protobuf field <code>int64 start = 4;</code>
     * @return int|string
     */
    public function getStart()
    {
        return $this->start;
    }

    /**
     * The start position of the range on the reference, 0-based inclusive. If
     * specified, `referenceName` must also be specified.
     *
     * Generated from protobuf field <code>int64 start = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setStart($var)
    {
        GPBUtil::checkInt64($var);
        $this->start = $var;

        return $this;
    }

    /**
     * The end position of the range on the reference, 0-based exclusive. If
     * specified, `referenceName` must also be specified.
     *
     * Generated from protobuf field <code>int64 end = 5;</code>
     * @return int|string
     */
    public function getEnd()
    {
        return $this->end;
    }

    /**
     * The end position of the range on the reference, 0-based exclusive. If
     * specified, `referenceName` must also be specified.
     *
     * Generated from protobuf field <code>int64 end = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setEnd($var)
    {
        GPBUtil::checkInt64($var);
        $this->end = $var;

        return $this;
    }

    /**
     * Restricts results to a shard containing approximately `1/totalShards`
     * of the normal response payload for this query. Results from a sharded
     * request are disjoint from those returned by all queries which differ only
     * in their shard parameter. A shard may yield 0 results; this is especially
     * likely for large values of `totalShards`.
     * Valid values are `[0, totalShards)`.
     *
     * Generated from protobuf field <code>int32 shard = 6;</code>
     * @return int
     */
    public function getShard()
    {
        return $this->shard;
    }

    /**
     * Restricts results to a shard containing approximately `1/totalShards`
     * of the normal response payload for this query. Results from a sharded
     * request are disjoint from those returned by all queries which differ only
     * in their shard parameter. A shard may yield 0 results; this is especially
     * likely for large values of `totalShards`.
     * Valid values are `[0, totalShards)`.
     *
     * Generated from protobuf field <code>int32 shard = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setShard($var)
    {
        GPBUtil::checkInt32($var);
        $this->shard = $var;

        return $this;
    }

    /**
     * Specifying `totalShards` causes a disjoint subset of the normal response
     * payload to be returned for each query with a unique `shard` parameter
     * specified. A best effort is made to yield equally sized shards. Sharding
     * can be used to distribute processing amongst workers, where each worker is
     * assigned a unique `shard` number and all workers specify the same
     * `totalShards` number. The union of reads returned for all sharded queries
     * `[0, totalShards)` is equal to those returned by a single unsharded query.
     * Queries for different values of `totalShards` with common divisors will
     * share shard boundaries. For example, streaming `shard` 2 of 5
     * `totalShards` yields the same results as streaming `shard`s 4 and 5 of 10
     * `totalShards`. This property can be leveraged for adaptive retries.
     *
     * Generated from protobuf field <code>int32 total_shards = 7;</code>
     * @return int
     */
    public function getTotalShards()
    {
        return $this->total_shards;
    }

    /**
     * Specifying `totalShards` causes a disjoint subset of the normal response
     * payload to be returned for each query with a unique `shard` parameter
     * specified. A best effort is made to yield equally sized shards. Sharding
     * can be used to distribute processing amongst workers, where each worker is
     * assigned a unique `shard` number and all workers specify the same
     * `totalShards` number. The union of reads returned for all sharded queries
     * `[0, totalShards)` is equal to those returned by a single unsharded query.
     * Queries for different values of `totalShards` with common divisors will
     * share shard boundaries. For example, streaming `shard` 2 of 5
     * `totalShards` yields the same results as streaming `shard`s 4 and 5 of 10
     * `totalShards`. This property can be leveraged for adaptive retries.
     *
     * Generated from protobuf field <code>int32 total_shards = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setTotalShards($var)
    {
        GPBUtil::checkInt32($var);
        $this->total_shards = $var;

        return $this;
    }

}

