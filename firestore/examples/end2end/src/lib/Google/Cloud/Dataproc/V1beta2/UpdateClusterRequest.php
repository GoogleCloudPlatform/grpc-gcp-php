<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataproc/v1beta2/clusters.proto

namespace Google\Cloud\Dataproc\V1beta2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A request to update a cluster.
 *
 * Generated from protobuf message <code>google.cloud.dataproc.v1beta2.UpdateClusterRequest</code>
 */
class UpdateClusterRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The ID of the Google Cloud Platform project the
     * cluster belongs to.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     */
    private $project_id = '';
    /**
     * Required. The Cloud Dataproc region in which to handle the request.
     *
     * Generated from protobuf field <code>string region = 5;</code>
     */
    private $region = '';
    /**
     * Required. The cluster name.
     *
     * Generated from protobuf field <code>string cluster_name = 2;</code>
     */
    private $cluster_name = '';
    /**
     * Required. The changes to the cluster.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1beta2.Cluster cluster = 3;</code>
     */
    private $cluster = null;
    /**
     * Optional. Timeout for graceful YARN decomissioning. Graceful
     * decommissioning allows removing nodes from the cluster without
     * interrupting jobs in progress. Timeout specifies how long to wait for jobs
     * in progress to finish before forcefully removing nodes (and potentially
     * interrupting jobs). Default timeout is 0 (for forceful decommission), and
     * the maximum allowed timeout is 1 day.
     * Only supported on Dataproc image versions 1.2 and higher.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration graceful_decommission_timeout = 6;</code>
     */
    private $graceful_decommission_timeout = null;
    /**
     * Required. Specifies the path, relative to <code>Cluster</code>, of
     * the field to update. For example, to change the number of workers
     * in a cluster to 5, the <code>update_mask</code> parameter would be
     * specified as <code>config.worker_config.num_instances</code>,
     * and the `PATCH` request body would specify the new value, as follows:
     *     {
     *       "config":{
     *         "workerConfig":{
     *           "numInstances":"5"
     *         }
     *       }
     *     }
     * Similarly, to change the number of preemptible workers in a cluster to 5, the
     * <code>update_mask</code> parameter would be <code>config.secondary_worker_config.num_instances</code>,
     * and the `PATCH` request body would be set as follows:
     *     {
     *       "config":{
     *         "secondaryWorkerConfig":{
     *           "numInstances":"5"
     *         }
     *       }
     *     }
     * <strong>Note:</strong> currently only some fields can be updated:
     * |Mask|Purpose|
     * |`labels`|Updates labels|
     * |`config.worker_config.num_instances`|Resize primary worker group|
     * |`config.secondary_worker_config.num_instances`|Resize secondary worker group|
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 4;</code>
     */
    private $update_mask = null;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Dataproc\V1Beta2\Clusters::initOnce();
        parent::__construct();
    }

    /**
     * Required. The ID of the Google Cloud Platform project the
     * cluster belongs to.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * Required. The ID of the Google Cloud Platform project the
     * cluster belongs to.
     *
     * Generated from protobuf field <code>string project_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * Required. The Cloud Dataproc region in which to handle the request.
     *
     * Generated from protobuf field <code>string region = 5;</code>
     * @return string
     */
    public function getRegion()
    {
        return $this->region;
    }

    /**
     * Required. The Cloud Dataproc region in which to handle the request.
     *
     * Generated from protobuf field <code>string region = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setRegion($var)
    {
        GPBUtil::checkString($var, True);
        $this->region = $var;

        return $this;
    }

    /**
     * Required. The cluster name.
     *
     * Generated from protobuf field <code>string cluster_name = 2;</code>
     * @return string
     */
    public function getClusterName()
    {
        return $this->cluster_name;
    }

    /**
     * Required. The cluster name.
     *
     * Generated from protobuf field <code>string cluster_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setClusterName($var)
    {
        GPBUtil::checkString($var, True);
        $this->cluster_name = $var;

        return $this;
    }

    /**
     * Required. The changes to the cluster.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1beta2.Cluster cluster = 3;</code>
     * @return \Google\Cloud\Dataproc\V1beta2\Cluster
     */
    public function getCluster()
    {
        return $this->cluster;
    }

    /**
     * Required. The changes to the cluster.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1beta2.Cluster cluster = 3;</code>
     * @param \Google\Cloud\Dataproc\V1beta2\Cluster $var
     * @return $this
     */
    public function setCluster($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataproc\V1beta2\Cluster::class);
        $this->cluster = $var;

        return $this;
    }

    /**
     * Optional. Timeout for graceful YARN decomissioning. Graceful
     * decommissioning allows removing nodes from the cluster without
     * interrupting jobs in progress. Timeout specifies how long to wait for jobs
     * in progress to finish before forcefully removing nodes (and potentially
     * interrupting jobs). Default timeout is 0 (for forceful decommission), and
     * the maximum allowed timeout is 1 day.
     * Only supported on Dataproc image versions 1.2 and higher.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration graceful_decommission_timeout = 6;</code>
     * @return \Google\Protobuf\Duration
     */
    public function getGracefulDecommissionTimeout()
    {
        return $this->graceful_decommission_timeout;
    }

    /**
     * Optional. Timeout for graceful YARN decomissioning. Graceful
     * decommissioning allows removing nodes from the cluster without
     * interrupting jobs in progress. Timeout specifies how long to wait for jobs
     * in progress to finish before forcefully removing nodes (and potentially
     * interrupting jobs). Default timeout is 0 (for forceful decommission), and
     * the maximum allowed timeout is 1 day.
     * Only supported on Dataproc image versions 1.2 and higher.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration graceful_decommission_timeout = 6;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setGracefulDecommissionTimeout($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->graceful_decommission_timeout = $var;

        return $this;
    }

    /**
     * Required. Specifies the path, relative to <code>Cluster</code>, of
     * the field to update. For example, to change the number of workers
     * in a cluster to 5, the <code>update_mask</code> parameter would be
     * specified as <code>config.worker_config.num_instances</code>,
     * and the `PATCH` request body would specify the new value, as follows:
     *     {
     *       "config":{
     *         "workerConfig":{
     *           "numInstances":"5"
     *         }
     *       }
     *     }
     * Similarly, to change the number of preemptible workers in a cluster to 5, the
     * <code>update_mask</code> parameter would be <code>config.secondary_worker_config.num_instances</code>,
     * and the `PATCH` request body would be set as follows:
     *     {
     *       "config":{
     *         "secondaryWorkerConfig":{
     *           "numInstances":"5"
     *         }
     *       }
     *     }
     * <strong>Note:</strong> currently only some fields can be updated:
     * |Mask|Purpose|
     * |`labels`|Updates labels|
     * |`config.worker_config.num_instances`|Resize primary worker group|
     * |`config.secondary_worker_config.num_instances`|Resize secondary worker group|
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 4;</code>
     * @return \Google\Protobuf\FieldMask
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    /**
     * Required. Specifies the path, relative to <code>Cluster</code>, of
     * the field to update. For example, to change the number of workers
     * in a cluster to 5, the <code>update_mask</code> parameter would be
     * specified as <code>config.worker_config.num_instances</code>,
     * and the `PATCH` request body would specify the new value, as follows:
     *     {
     *       "config":{
     *         "workerConfig":{
     *           "numInstances":"5"
     *         }
     *       }
     *     }
     * Similarly, to change the number of preemptible workers in a cluster to 5, the
     * <code>update_mask</code> parameter would be <code>config.secondary_worker_config.num_instances</code>,
     * and the `PATCH` request body would be set as follows:
     *     {
     *       "config":{
     *         "secondaryWorkerConfig":{
     *           "numInstances":"5"
     *         }
     *       }
     *     }
     * <strong>Note:</strong> currently only some fields can be updated:
     * |Mask|Purpose|
     * |`labels`|Updates labels|
     * |`config.worker_config.num_instances`|Resize primary worker group|
     * |`config.secondary_worker_config.num_instances`|Resize secondary worker group|
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 4;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

