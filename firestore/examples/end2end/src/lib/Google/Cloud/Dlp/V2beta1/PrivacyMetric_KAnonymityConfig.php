<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2beta1/dlp.proto

namespace Google\Cloud\Dlp\V2beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * k-anonymity metric, used for analysis of reidentification risk.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2beta1.PrivacyMetric.KAnonymityConfig</code>
 */
class PrivacyMetric_KAnonymityConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Set of fields to compute k-anonymity over. When multiple fields are
     * specified, they are considered a single composite key. Structs and
     * repeated data types are not supported; however, nested fields are
     * supported so long as they are not structs themselves or nested within
     * a repeated field.
     *
     * Generated from protobuf field <code>repeated .google.privacy.dlp.v2beta1.FieldId quasi_ids = 1;</code>
     */
    private $quasi_ids;
    /**
     * Optional message indicating that each distinct `EntityId` should not
     * contribute to the k-anonymity count more than once per equivalence class.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.EntityId entity_id = 2;</code>
     */
    private $entity_id = null;

    public function __construct() {
        \GPBMetadata\Google\Privacy\Dlp\V2Beta1\Dlp::initOnce();
        parent::__construct();
    }

    /**
     * Set of fields to compute k-anonymity over. When multiple fields are
     * specified, they are considered a single composite key. Structs and
     * repeated data types are not supported; however, nested fields are
     * supported so long as they are not structs themselves or nested within
     * a repeated field.
     *
     * Generated from protobuf field <code>repeated .google.privacy.dlp.v2beta1.FieldId quasi_ids = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getQuasiIds()
    {
        return $this->quasi_ids;
    }

    /**
     * Set of fields to compute k-anonymity over. When multiple fields are
     * specified, they are considered a single composite key. Structs and
     * repeated data types are not supported; however, nested fields are
     * supported so long as they are not structs themselves or nested within
     * a repeated field.
     *
     * Generated from protobuf field <code>repeated .google.privacy.dlp.v2beta1.FieldId quasi_ids = 1;</code>
     * @param \Google\Cloud\Dlp\V2beta1\FieldId[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setQuasiIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Dlp\V2beta1\FieldId::class);
        $this->quasi_ids = $arr;

        return $this;
    }

    /**
     * Optional message indicating that each distinct `EntityId` should not
     * contribute to the k-anonymity count more than once per equivalence class.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.EntityId entity_id = 2;</code>
     * @return \Google\Cloud\Dlp\V2beta1\EntityId
     */
    public function getEntityId()
    {
        return $this->entity_id;
    }

    /**
     * Optional message indicating that each distinct `EntityId` should not
     * contribute to the k-anonymity count more than once per equivalence class.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.EntityId entity_id = 2;</code>
     * @param \Google\Cloud\Dlp\V2beta1\EntityId $var
     * @return $this
     */
    public function setEntityId($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2beta1\EntityId::class);
        $this->entity_id = $var;

        return $this;
    }

}

