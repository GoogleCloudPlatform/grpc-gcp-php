<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2beta1/dlp.proto

namespace Google\Cloud\Dlp\V2beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A collection of expressions
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2beta1.RecordCondition.Expressions</code>
 */
class RecordCondition_Expressions extends \Google\Protobuf\Internal\Message
{
    /**
     * The operator to apply to the result of conditions. Default and currently
     * only supported value is `AND`.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
     */
    private $logical_operator = 0;
    protected $type;

    public function __construct() {
        \GPBMetadata\Google\Privacy\Dlp\V2Beta1\Dlp::initOnce();
        parent::__construct();
    }

    /**
     * The operator to apply to the result of conditions. Default and currently
     * only supported value is `AND`.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
     * @return int
     */
    public function getLogicalOperator()
    {
        return $this->logical_operator;
    }

    /**
     * The operator to apply to the result of conditions. Default and currently
     * only supported value is `AND`.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.RecordCondition.Expressions.LogicalOperator logical_operator = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setLogicalOperator($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Dlp\V2beta1\RecordCondition_Expressions_LogicalOperator::class);
        $this->logical_operator = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     * @return \Google\Cloud\Dlp\V2beta1\RecordCondition_Conditions
     */
    public function getConditions()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.RecordCondition.Conditions conditions = 3;</code>
     * @param \Google\Cloud\Dlp\V2beta1\RecordCondition_Conditions $var
     * @return $this
     */
    public function setConditions($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2beta1\RecordCondition_Conditions::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

