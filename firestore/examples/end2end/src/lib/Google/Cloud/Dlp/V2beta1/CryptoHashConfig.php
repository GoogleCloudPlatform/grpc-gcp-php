<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2beta1/dlp.proto

namespace Google\Cloud\Dlp\V2beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Pseudonymization method that generates surrogates via cryptographic hashing.
 * Uses SHA-256.
 * Outputs a 32 byte digest as an uppercase hex string
 * (for example, 41D1567F7F99F1DC2A5FAB886DEE5BEE).
 * Currently, only string and integer values can be hashed.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2beta1.CryptoHashConfig</code>
 */
class CryptoHashConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * The key used by the hash function.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.CryptoKey crypto_key = 1;</code>
     */
    private $crypto_key = null;

    public function __construct() {
        \GPBMetadata\Google\Privacy\Dlp\V2Beta1\Dlp::initOnce();
        parent::__construct();
    }

    /**
     * The key used by the hash function.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.CryptoKey crypto_key = 1;</code>
     * @return \Google\Cloud\Dlp\V2beta1\CryptoKey
     */
    public function getCryptoKey()
    {
        return $this->crypto_key;
    }

    /**
     * The key used by the hash function.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta1.CryptoKey crypto_key = 1;</code>
     * @param \Google\Cloud\Dlp\V2beta1\CryptoKey $var
     * @return $this
     */
    public function setCryptoKey($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2beta1\CryptoKey::class);
        $this->crypto_key = $var;

        return $this;
    }

}

