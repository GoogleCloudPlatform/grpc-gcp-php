<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2beta2/dlp.proto

namespace Google\Cloud\Dlp\V2beta2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for listing DLP jobs.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2beta2.ListDlpJobsRequest</code>
 */
class ListDlpJobsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The parent resource name, for example projects/my-project-id.
     *
     * Generated from protobuf field <code>string parent = 4;</code>
     */
    private $parent = '';
    /**
     * Optional. Allows filtering.
     * Supported syntax:
     * * Filter expressions are made up of one or more restrictions.
     * * Restrictions can be combined by `AND` or `OR` logical operators. A
     * sequence of restrictions implicitly uses `AND`.
     * * A restriction has the form of `<field> <operator> <value>`.
     * * Supported fields/values for inspect jobs:
     *     - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED
     *     - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
     * * Supported fields for risk analysis jobs:
     *     - `state` - RUNNING|CANCELED|FINISHED|FAILED
     * * The operator must be `=` or `!=`.
     * Examples:
     * * inspected_storage = cloud_storage AND state = done
     * * inspected_storage = cloud_storage OR inspected_storage = bigquery
     * * inspected_storage = cloud_storage AND (state = done OR state = canceled)
     * The length of this field should be no more than 500 characters.
     *
     * Generated from protobuf field <code>string filter = 1;</code>
     */
    private $filter = '';
    /**
     * The standard list page size.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     */
    private $page_size = 0;
    /**
     * The standard list page token.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     */
    private $page_token = '';
    /**
     * The type of job. Defaults to `DlpJobType.INSPECT`
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta2.DlpJobType type = 5;</code>
     */
    private $type = 0;

    public function __construct() {
        \GPBMetadata\Google\Privacy\Dlp\V2Beta2\Dlp::initOnce();
        parent::__construct();
    }

    /**
     * The parent resource name, for example projects/my-project-id.
     *
     * Generated from protobuf field <code>string parent = 4;</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * The parent resource name, for example projects/my-project-id.
     *
     * Generated from protobuf field <code>string parent = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. Allows filtering.
     * Supported syntax:
     * * Filter expressions are made up of one or more restrictions.
     * * Restrictions can be combined by `AND` or `OR` logical operators. A
     * sequence of restrictions implicitly uses `AND`.
     * * A restriction has the form of `<field> <operator> <value>`.
     * * Supported fields/values for inspect jobs:
     *     - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED
     *     - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
     * * Supported fields for risk analysis jobs:
     *     - `state` - RUNNING|CANCELED|FINISHED|FAILED
     * * The operator must be `=` or `!=`.
     * Examples:
     * * inspected_storage = cloud_storage AND state = done
     * * inspected_storage = cloud_storage OR inspected_storage = bigquery
     * * inspected_storage = cloud_storage AND (state = done OR state = canceled)
     * The length of this field should be no more than 500 characters.
     *
     * Generated from protobuf field <code>string filter = 1;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Optional. Allows filtering.
     * Supported syntax:
     * * Filter expressions are made up of one or more restrictions.
     * * Restrictions can be combined by `AND` or `OR` logical operators. A
     * sequence of restrictions implicitly uses `AND`.
     * * A restriction has the form of `<field> <operator> <value>`.
     * * Supported fields/values for inspect jobs:
     *     - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED
     *     - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
     * * Supported fields for risk analysis jobs:
     *     - `state` - RUNNING|CANCELED|FINISHED|FAILED
     * * The operator must be `=` or `!=`.
     * Examples:
     * * inspected_storage = cloud_storage AND state = done
     * * inspected_storage = cloud_storage OR inspected_storage = bigquery
     * * inspected_storage = cloud_storage AND (state = done OR state = canceled)
     * The length of this field should be no more than 500 characters.
     *
     * Generated from protobuf field <code>string filter = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * The standard list page size.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * The standard list page size.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * The standard list page token.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * The standard list page token.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * The type of job. Defaults to `DlpJobType.INSPECT`
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta2.DlpJobType type = 5;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The type of job. Defaults to `DlpJobType.INSPECT`
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2beta2.DlpJobType type = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Dlp\V2beta2\DlpJobType::class);
        $this->type = $var;

        return $this;
    }

}

