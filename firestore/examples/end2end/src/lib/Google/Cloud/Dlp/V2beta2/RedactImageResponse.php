<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2beta2/dlp.proto

namespace Google\Cloud\Dlp\V2beta2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Results of redacting an image.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2beta2.RedactImageResponse</code>
 */
class RedactImageResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The redacted image. The type will be the same as the original image.
     *
     * Generated from protobuf field <code>bytes redacted_image = 1;</code>
     */
    private $redacted_image = '';
    /**
     * If an image was being inspected and the InspectConfig's include_quote was
     * set to true, then this field will include all text, if any, that was found
     * in the image.
     *
     * Generated from protobuf field <code>string extracted_text = 2;</code>
     */
    private $extracted_text = '';

    public function __construct() {
        \GPBMetadata\Google\Privacy\Dlp\V2Beta2\Dlp::initOnce();
        parent::__construct();
    }

    /**
     * The redacted image. The type will be the same as the original image.
     *
     * Generated from protobuf field <code>bytes redacted_image = 1;</code>
     * @return string
     */
    public function getRedactedImage()
    {
        return $this->redacted_image;
    }

    /**
     * The redacted image. The type will be the same as the original image.
     *
     * Generated from protobuf field <code>bytes redacted_image = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRedactedImage($var)
    {
        GPBUtil::checkString($var, False);
        $this->redacted_image = $var;

        return $this;
    }

    /**
     * If an image was being inspected and the InspectConfig's include_quote was
     * set to true, then this field will include all text, if any, that was found
     * in the image.
     *
     * Generated from protobuf field <code>string extracted_text = 2;</code>
     * @return string
     */
    public function getExtractedText()
    {
        return $this->extracted_text;
    }

    /**
     * If an image was being inspected and the InspectConfig's include_quote was
     * set to true, then this field will include all text, if any, that was found
     * in the image.
     *
     * Generated from protobuf field <code>string extracted_text = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setExtractedText($var)
    {
        GPBUtil::checkString($var, True);
        $this->extracted_text = $var;

        return $this;
    }

}

