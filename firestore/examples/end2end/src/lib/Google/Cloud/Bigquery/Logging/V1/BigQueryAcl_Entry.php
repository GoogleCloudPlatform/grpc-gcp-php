<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/logging/v1/audit_data.proto

namespace Google\Cloud\Bigquery\Logging\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Access control entry.
 *
 * Generated from protobuf message <code>google.cloud.bigquery.logging.v1.BigQueryAcl.Entry</code>
 */
class BigQueryAcl_Entry extends \Google\Protobuf\Internal\Message
{
    /**
     * The granted role, which can be `READER`, `WRITER`, or `OWNER`.
     *
     * Generated from protobuf field <code>string role = 1;</code>
     */
    private $role = '';
    /**
     * Grants access to a group identified by an email address.
     *
     * Generated from protobuf field <code>string group_email = 2;</code>
     */
    private $group_email = '';
    /**
     * Grants access to a user identified by an email address.
     *
     * Generated from protobuf field <code>string user_email = 3;</code>
     */
    private $user_email = '';
    /**
     * Grants access to all members of a domain.
     *
     * Generated from protobuf field <code>string domain = 4;</code>
     */
    private $domain = '';
    /**
     * Grants access to special groups. Valid groups are `PROJECT_OWNERS`,
     * `PROJECT_READERS`, `PROJECT_WRITERS` and `ALL_AUTHENTICATED_USERS`.
     *
     * Generated from protobuf field <code>string special_group = 5;</code>
     */
    private $special_group = '';
    /**
     * Grants access to a BigQuery View.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableName view_name = 6;</code>
     */
    private $view_name = null;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Bigquery\Logging\V1\AuditData::initOnce();
        parent::__construct();
    }

    /**
     * The granted role, which can be `READER`, `WRITER`, or `OWNER`.
     *
     * Generated from protobuf field <code>string role = 1;</code>
     * @return string
     */
    public function getRole()
    {
        return $this->role;
    }

    /**
     * The granted role, which can be `READER`, `WRITER`, or `OWNER`.
     *
     * Generated from protobuf field <code>string role = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRole($var)
    {
        GPBUtil::checkString($var, True);
        $this->role = $var;

        return $this;
    }

    /**
     * Grants access to a group identified by an email address.
     *
     * Generated from protobuf field <code>string group_email = 2;</code>
     * @return string
     */
    public function getGroupEmail()
    {
        return $this->group_email;
    }

    /**
     * Grants access to a group identified by an email address.
     *
     * Generated from protobuf field <code>string group_email = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setGroupEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->group_email = $var;

        return $this;
    }

    /**
     * Grants access to a user identified by an email address.
     *
     * Generated from protobuf field <code>string user_email = 3;</code>
     * @return string
     */
    public function getUserEmail()
    {
        return $this->user_email;
    }

    /**
     * Grants access to a user identified by an email address.
     *
     * Generated from protobuf field <code>string user_email = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setUserEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->user_email = $var;

        return $this;
    }

    /**
     * Grants access to all members of a domain.
     *
     * Generated from protobuf field <code>string domain = 4;</code>
     * @return string
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * Grants access to all members of a domain.
     *
     * Generated from protobuf field <code>string domain = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->domain = $var;

        return $this;
    }

    /**
     * Grants access to special groups. Valid groups are `PROJECT_OWNERS`,
     * `PROJECT_READERS`, `PROJECT_WRITERS` and `ALL_AUTHENTICATED_USERS`.
     *
     * Generated from protobuf field <code>string special_group = 5;</code>
     * @return string
     */
    public function getSpecialGroup()
    {
        return $this->special_group;
    }

    /**
     * Grants access to special groups. Valid groups are `PROJECT_OWNERS`,
     * `PROJECT_READERS`, `PROJECT_WRITERS` and `ALL_AUTHENTICATED_USERS`.
     *
     * Generated from protobuf field <code>string special_group = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSpecialGroup($var)
    {
        GPBUtil::checkString($var, True);
        $this->special_group = $var;

        return $this;
    }

    /**
     * Grants access to a BigQuery View.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableName view_name = 6;</code>
     * @return \Google\Cloud\Bigquery\Logging\V1\TableName
     */
    public function getViewName()
    {
        return $this->view_name;
    }

    /**
     * Grants access to a BigQuery View.
     *
     * Generated from protobuf field <code>.google.cloud.bigquery.logging.v1.TableName view_name = 6;</code>
     * @param \Google\Cloud\Bigquery\Logging\V1\TableName $var
     * @return $this
     */
    public function setViewName($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Bigquery\Logging\V1\TableName::class);
        $this->view_name = $var;

        return $this;
    }

}

