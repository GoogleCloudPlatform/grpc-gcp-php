<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/cloudbuild/v1/cloudbuild.proto

namespace Google\Devtools\Cloudbuild\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Optional arguments to enable specific features of builds.
 *
 * Generated from protobuf message <code>google.devtools.cloudbuild.v1.BuildOptions</code>
 */
class BuildOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * Requested hash for SourceProvenance.
     *
     * Generated from protobuf field <code>repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     */
    private $source_provenance_hash;
    /**
     * Requested verifiability options.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     */
    private $requested_verify_option = 0;
    /**
     * GCE VM size to run the build on.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     */
    private $machine_type = 0;
    /**
     * Requested disk size for the VM that runs the build. Note that this is *NOT*
     * "disk free"; some of the space will be used by the operating system and
     * build utilities. Also note that this is the minimum disk size that will be
     * allocated for the build -- the build may run with a larger disk than
     * requested. At present, the maximum disk size is 1000GB; builds that request
     * more than the maximum are rejected with an error.
     *
     * Generated from protobuf field <code>int64 disk_size_gb = 6;</code>
     */
    private $disk_size_gb = 0;
    /**
     * SubstitutionOption to allow unmatch substitutions.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     */
    private $substitution_option = 0;
    /**
     * LogStreamingOption to define build log streaming behavior to Google Cloud
     * Storage.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     */
    private $log_streaming_option = 0;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Cloudbuild\V1\Cloudbuild::initOnce();
        parent::__construct();
    }

    /**
     * Requested hash for SourceProvenance.
     *
     * Generated from protobuf field <code>repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSourceProvenanceHash()
    {
        return $this->source_provenance_hash;
    }

    /**
     * Requested hash for SourceProvenance.
     *
     * Generated from protobuf field <code>repeated .google.devtools.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSourceProvenanceHash($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Google\Devtools\Cloudbuild\V1\Hash_HashType::class);
        $this->source_provenance_hash = $arr;

        return $this;
    }

    /**
     * Requested verifiability options.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     * @return int
     */
    public function getRequestedVerifyOption()
    {
        return $this->requested_verify_option;
    }

    /**
     * Requested verifiability options.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setRequestedVerifyOption($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Cloudbuild\V1\BuildOptions_VerifyOption::class);
        $this->requested_verify_option = $var;

        return $this;
    }

    /**
     * GCE VM size to run the build on.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     * @return int
     */
    public function getMachineType()
    {
        return $this->machine_type;
    }

    /**
     * GCE VM size to run the build on.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setMachineType($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Cloudbuild\V1\BuildOptions_MachineType::class);
        $this->machine_type = $var;

        return $this;
    }

    /**
     * Requested disk size for the VM that runs the build. Note that this is *NOT*
     * "disk free"; some of the space will be used by the operating system and
     * build utilities. Also note that this is the minimum disk size that will be
     * allocated for the build -- the build may run with a larger disk than
     * requested. At present, the maximum disk size is 1000GB; builds that request
     * more than the maximum are rejected with an error.
     *
     * Generated from protobuf field <code>int64 disk_size_gb = 6;</code>
     * @return int|string
     */
    public function getDiskSizeGb()
    {
        return $this->disk_size_gb;
    }

    /**
     * Requested disk size for the VM that runs the build. Note that this is *NOT*
     * "disk free"; some of the space will be used by the operating system and
     * build utilities. Also note that this is the minimum disk size that will be
     * allocated for the build -- the build may run with a larger disk than
     * requested. At present, the maximum disk size is 1000GB; builds that request
     * more than the maximum are rejected with an error.
     *
     * Generated from protobuf field <code>int64 disk_size_gb = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDiskSizeGb($var)
    {
        GPBUtil::checkInt64($var);
        $this->disk_size_gb = $var;

        return $this;
    }

    /**
     * SubstitutionOption to allow unmatch substitutions.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     * @return int
     */
    public function getSubstitutionOption()
    {
        return $this->substitution_option;
    }

    /**
     * SubstitutionOption to allow unmatch substitutions.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setSubstitutionOption($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Cloudbuild\V1\BuildOptions_SubstitutionOption::class);
        $this->substitution_option = $var;

        return $this;
    }

    /**
     * LogStreamingOption to define build log streaming behavior to Google Cloud
     * Storage.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     * @return int
     */
    public function getLogStreamingOption()
    {
        return $this->log_streaming_option;
    }

    /**
     * LogStreamingOption to define build log streaming behavior to Google Cloud
     * Storage.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setLogStreamingOption($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Cloudbuild\V1\BuildOptions_LogStreamingOption::class);
        $this->log_streaming_option = $var;

        return $this;
    }

}

