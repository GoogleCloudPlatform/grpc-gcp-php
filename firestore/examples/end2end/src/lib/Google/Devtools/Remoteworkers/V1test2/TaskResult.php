<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteworkers/v1test2/tasks.proto

namespace Google\Devtools\Remoteworkers\V1test2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The result and metadata of the task.
 *
 * Generated from protobuf message <code>google.devtools.remoteworkers.v1test2.TaskResult</code>
 */
class TaskResult extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the task result; must be a name of a `Task` followed by
     * `/result`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * The result may be updated several times; the client must only set
     * `complete` to true to indicate that no further updates are allowed.
     * If this is not true, the `status` field must not be examined since its zero
     * value is equivalent to `OK`.
     * Once a task is completed, it must not be updated with further results,
     * though the implementation may choose to continue to receive logs.
     *
     * Generated from protobuf field <code>bool complete = 2;</code>
     */
    private $complete = false;
    /**
     * The final status of the task itself. For example, if task.description
     * included a timeout which was violated, status.code may be
     * DEADLINE_EXCEEDED. This field can only be read if `complete` is true.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 3;</code>
     */
    private $status = null;
    /**
     * Any non-log output, such as output files and exit codes. See
     * CommandResult as an example.
     *
     * Generated from protobuf field <code>.google.protobuf.Any output = 4;</code>
     */
    private $output = null;
    /**
     * Any information about how the command was executed, eg runtime. See
     * CommandOverhead as an example.
     *
     * Generated from protobuf field <code>.google.protobuf.Any meta = 5;</code>
     */
    private $meta = null;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Remoteworkers\V1Test2\Tasks::initOnce();
        parent::__construct();
    }

    /**
     * The name of the task result; must be a name of a `Task` followed by
     * `/result`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the task result; must be a name of a `Task` followed by
     * `/result`.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The result may be updated several times; the client must only set
     * `complete` to true to indicate that no further updates are allowed.
     * If this is not true, the `status` field must not be examined since its zero
     * value is equivalent to `OK`.
     * Once a task is completed, it must not be updated with further results,
     * though the implementation may choose to continue to receive logs.
     *
     * Generated from protobuf field <code>bool complete = 2;</code>
     * @return bool
     */
    public function getComplete()
    {
        return $this->complete;
    }

    /**
     * The result may be updated several times; the client must only set
     * `complete` to true to indicate that no further updates are allowed.
     * If this is not true, the `status` field must not be examined since its zero
     * value is equivalent to `OK`.
     * Once a task is completed, it must not be updated with further results,
     * though the implementation may choose to continue to receive logs.
     *
     * Generated from protobuf field <code>bool complete = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setComplete($var)
    {
        GPBUtil::checkBool($var);
        $this->complete = $var;

        return $this;
    }

    /**
     * The final status of the task itself. For example, if task.description
     * included a timeout which was violated, status.code may be
     * DEADLINE_EXCEEDED. This field can only be read if `complete` is true.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 3;</code>
     * @return \Google\Rpc\Status
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * The final status of the task itself. For example, if task.description
     * included a timeout which was violated, status.code may be
     * DEADLINE_EXCEEDED. This field can only be read if `complete` is true.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 3;</code>
     * @param \Google\Rpc\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Google\Rpc\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * Any non-log output, such as output files and exit codes. See
     * CommandResult as an example.
     *
     * Generated from protobuf field <code>.google.protobuf.Any output = 4;</code>
     * @return \Google\Protobuf\Any
     */
    public function getOutput()
    {
        return $this->output;
    }

    /**
     * Any non-log output, such as output files and exit codes. See
     * CommandResult as an example.
     *
     * Generated from protobuf field <code>.google.protobuf.Any output = 4;</code>
     * @param \Google\Protobuf\Any $var
     * @return $this
     */
    public function setOutput($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Any::class);
        $this->output = $var;

        return $this;
    }

    /**
     * Any information about how the command was executed, eg runtime. See
     * CommandOverhead as an example.
     *
     * Generated from protobuf field <code>.google.protobuf.Any meta = 5;</code>
     * @return \Google\Protobuf\Any
     */
    public function getMeta()
    {
        return $this->meta;
    }

    /**
     * Any information about how the command was executed, eg runtime. See
     * CommandOverhead as an example.
     *
     * Generated from protobuf field <code>.google.protobuf.Any meta = 5;</code>
     * @param \Google\Protobuf\Any $var
     * @return $this
     */
    public function setMeta($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Any::class);
        $this->meta = $var;

        return $this;
    }

}

