<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteworkers/v1test2/command.proto

namespace Google\Devtools\Remoteworkers\V1test2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes the actual outputs from the task.
 *
 * Generated from protobuf message <code>google.devtools.remoteworkers.v1test2.CommandOutputs</code>
 */
class CommandOutputs extends \Google\Protobuf\Internal\Message
{
    /**
     * exit_code is only fully reliable if the status' code is OK. If the task
     * exceeded its deadline or was cancelled, the process may still produce an
     * exit code as it is cancelled, and this will be populated, but a successful
     * (zero) is unlikely to be correct unless the status code is OK.
     *
     * Generated from protobuf field <code>int32 exit_code = 1;</code>
     */
    private $exit_code = 0;
    /**
     * The output files. The blob referenced by the digest should contain
     * one of the following (implementation-dependent):
     *    * A marshalled DirectoryMetadata of the returned filesystem
     *    * A LUCI-style .isolated file
     *
     * Generated from protobuf field <code>.google.devtools.remoteworkers.v1test2.Digest outputs = 2;</code>
     */
    private $outputs = null;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Remoteworkers\V1Test2\Command::initOnce();
        parent::__construct();
    }

    /**
     * exit_code is only fully reliable if the status' code is OK. If the task
     * exceeded its deadline or was cancelled, the process may still produce an
     * exit code as it is cancelled, and this will be populated, but a successful
     * (zero) is unlikely to be correct unless the status code is OK.
     *
     * Generated from protobuf field <code>int32 exit_code = 1;</code>
     * @return int
     */
    public function getExitCode()
    {
        return $this->exit_code;
    }

    /**
     * exit_code is only fully reliable if the status' code is OK. If the task
     * exceeded its deadline or was cancelled, the process may still produce an
     * exit code as it is cancelled, and this will be populated, but a successful
     * (zero) is unlikely to be correct unless the status code is OK.
     *
     * Generated from protobuf field <code>int32 exit_code = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setExitCode($var)
    {
        GPBUtil::checkInt32($var);
        $this->exit_code = $var;

        return $this;
    }

    /**
     * The output files. The blob referenced by the digest should contain
     * one of the following (implementation-dependent):
     *    * A marshalled DirectoryMetadata of the returned filesystem
     *    * A LUCI-style .isolated file
     *
     * Generated from protobuf field <code>.google.devtools.remoteworkers.v1test2.Digest outputs = 2;</code>
     * @return \Google\Devtools\Remoteworkers\V1test2\Digest
     */
    public function getOutputs()
    {
        return $this->outputs;
    }

    /**
     * The output files. The blob referenced by the digest should contain
     * one of the following (implementation-dependent):
     *    * A marshalled DirectoryMetadata of the returned filesystem
     *    * A LUCI-style .isolated file
     *
     * Generated from protobuf field <code>.google.devtools.remoteworkers.v1test2.Digest outputs = 2;</code>
     * @param \Google\Devtools\Remoteworkers\V1test2\Digest $var
     * @return $this
     */
    public function setOutputs($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Remoteworkers\V1test2\Digest::class);
        $this->outputs = $var;

        return $this;
    }

}

