<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteexecution/v1test/remote_execution.proto

namespace Google\Devtools\Remoteexecution\V1test;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The response message for
 * [Execution.Execute][google.devtools.remoteexecution.v1test.Execution.Execute],
 * which will be contained in the [response
 * field][google.longrunning.Operation.response] of the
 * [Operation][google.longrunning.Operation].
 *
 * Generated from protobuf message <code>google.devtools.remoteexecution.v1test.ExecuteResponse</code>
 */
class ExecuteResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The result of the action.
     *
     * Generated from protobuf field <code>.google.devtools.remoteexecution.v1test.ActionResult result = 1;</code>
     */
    private $result = null;
    /**
     * True if the result was served from cache, false if it was executed.
     *
     * Generated from protobuf field <code>bool cached_result = 2;</code>
     */
    private $cached_result = false;
    /**
     * If the status has a code other than `OK`, it indicates that the action did
     * not finish execution. For example, if the operation times out during
     * execution, the status will have a `DEADLINE_EXCEEDED` code. Servers MUST
     * use this field for errors in execution, rather than the error field on the
     * `Operation` object.
     * If the status code is other than `OK`, then the result MUST NOT be cached.
     * For an error status, the `result` field is optional; the server may
     * populate the output-, stdout-, and stderr-related fields if it has any
     * information available, such as the stdout and stderr of a timed-out action.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 3;</code>
     */
    private $status = null;
    /**
     * An optional list of additional log outputs the server wishes to provide. A
     * server can use this to return execution-specific logs however it wishes.
     * This is intended primarily to make it easier for users to debug issues that
     * may be outside of the actual job execution, such as by identifying the
     * worker executing the action or by providing logs from the worker's setup
     * phase. The keys SHOULD be human readable so that a client can display them
     * to a user.
     *
     * Generated from protobuf field <code>map<string, .google.devtools.remoteexecution.v1test.LogFile> server_logs = 4;</code>
     */
    private $server_logs;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Remoteexecution\V1Test\RemoteExecution::initOnce();
        parent::__construct();
    }

    /**
     * The result of the action.
     *
     * Generated from protobuf field <code>.google.devtools.remoteexecution.v1test.ActionResult result = 1;</code>
     * @return \Google\Devtools\Remoteexecution\V1test\ActionResult
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * The result of the action.
     *
     * Generated from protobuf field <code>.google.devtools.remoteexecution.v1test.ActionResult result = 1;</code>
     * @param \Google\Devtools\Remoteexecution\V1test\ActionResult $var
     * @return $this
     */
    public function setResult($var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Remoteexecution\V1test\ActionResult::class);
        $this->result = $var;

        return $this;
    }

    /**
     * True if the result was served from cache, false if it was executed.
     *
     * Generated from protobuf field <code>bool cached_result = 2;</code>
     * @return bool
     */
    public function getCachedResult()
    {
        return $this->cached_result;
    }

    /**
     * True if the result was served from cache, false if it was executed.
     *
     * Generated from protobuf field <code>bool cached_result = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setCachedResult($var)
    {
        GPBUtil::checkBool($var);
        $this->cached_result = $var;

        return $this;
    }

    /**
     * If the status has a code other than `OK`, it indicates that the action did
     * not finish execution. For example, if the operation times out during
     * execution, the status will have a `DEADLINE_EXCEEDED` code. Servers MUST
     * use this field for errors in execution, rather than the error field on the
     * `Operation` object.
     * If the status code is other than `OK`, then the result MUST NOT be cached.
     * For an error status, the `result` field is optional; the server may
     * populate the output-, stdout-, and stderr-related fields if it has any
     * information available, such as the stdout and stderr of a timed-out action.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 3;</code>
     * @return \Google\Rpc\Status
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * If the status has a code other than `OK`, it indicates that the action did
     * not finish execution. For example, if the operation times out during
     * execution, the status will have a `DEADLINE_EXCEEDED` code. Servers MUST
     * use this field for errors in execution, rather than the error field on the
     * `Operation` object.
     * If the status code is other than `OK`, then the result MUST NOT be cached.
     * For an error status, the `result` field is optional; the server may
     * populate the output-, stdout-, and stderr-related fields if it has any
     * information available, such as the stdout and stderr of a timed-out action.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 3;</code>
     * @param \Google\Rpc\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Google\Rpc\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * An optional list of additional log outputs the server wishes to provide. A
     * server can use this to return execution-specific logs however it wishes.
     * This is intended primarily to make it easier for users to debug issues that
     * may be outside of the actual job execution, such as by identifying the
     * worker executing the action or by providing logs from the worker's setup
     * phase. The keys SHOULD be human readable so that a client can display them
     * to a user.
     *
     * Generated from protobuf field <code>map<string, .google.devtools.remoteexecution.v1test.LogFile> server_logs = 4;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getServerLogs()
    {
        return $this->server_logs;
    }

    /**
     * An optional list of additional log outputs the server wishes to provide. A
     * server can use this to return execution-specific logs however it wishes.
     * This is intended primarily to make it easier for users to debug issues that
     * may be outside of the actual job execution, such as by identifying the
     * worker executing the action or by providing logs from the worker's setup
     * phase. The keys SHOULD be human readable so that a client can display them
     * to a user.
     *
     * Generated from protobuf field <code>map<string, .google.devtools.remoteexecution.v1test.LogFile> server_logs = 4;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setServerLogs($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Remoteexecution\V1test\LogFile::class);
        $this->server_logs = $arr;

        return $this;
    }

}

