<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/remoteexecution/v1test/remote_execution.proto

namespace Google\Devtools\Remoteexecution\V1test;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A `Command` is the actual command executed by a worker running an
 * [Action][google.devtools.remoteexecution.v1test.Action].
 * Except as otherwise required, the environment (such as which system
 * libraries or binaries are available, and what filesystems are mounted where)
 * is defined by and specific to the implementation of the remote execution API.
 *
 * Generated from protobuf message <code>google.devtools.remoteexecution.v1test.Command</code>
 */
class Command extends \Google\Protobuf\Internal\Message
{
    /**
     * The arguments to the command. The first argument must be the path to the
     * executable, which must be either a relative path, in which case it is
     * evaluated with respect to the input root, or an absolute path. The `PATH`
     * environment variable, or similar functionality on other systems, is not
     * used to determine which executable to run.
     * The working directory will always be the input root.
     *
     * Generated from protobuf field <code>repeated string arguments = 1;</code>
     */
    private $arguments;
    /**
     * The environment variables to set when running the program. The worker may
     * provide its own default environment variables; these defaults can be
     * overridden using this field. Additional variables can also be specified.
     * In order to ensure that equivalent `Command`s always hash to the same
     * value, the environment variables MUST be lexicographically sorted by name.
     * Sorting of strings is done by code point, equivalently, by the UTF-8 bytes.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteexecution.v1test.Command.EnvironmentVariable environment_variables = 2;</code>
     */
    private $environment_variables;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Remoteexecution\V1Test\RemoteExecution::initOnce();
        parent::__construct();
    }

    /**
     * The arguments to the command. The first argument must be the path to the
     * executable, which must be either a relative path, in which case it is
     * evaluated with respect to the input root, or an absolute path. The `PATH`
     * environment variable, or similar functionality on other systems, is not
     * used to determine which executable to run.
     * The working directory will always be the input root.
     *
     * Generated from protobuf field <code>repeated string arguments = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getArguments()
    {
        return $this->arguments;
    }

    /**
     * The arguments to the command. The first argument must be the path to the
     * executable, which must be either a relative path, in which case it is
     * evaluated with respect to the input root, or an absolute path. The `PATH`
     * environment variable, or similar functionality on other systems, is not
     * used to determine which executable to run.
     * The working directory will always be the input root.
     *
     * Generated from protobuf field <code>repeated string arguments = 1;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setArguments($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->arguments = $arr;

        return $this;
    }

    /**
     * The environment variables to set when running the program. The worker may
     * provide its own default environment variables; these defaults can be
     * overridden using this field. Additional variables can also be specified.
     * In order to ensure that equivalent `Command`s always hash to the same
     * value, the environment variables MUST be lexicographically sorted by name.
     * Sorting of strings is done by code point, equivalently, by the UTF-8 bytes.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteexecution.v1test.Command.EnvironmentVariable environment_variables = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEnvironmentVariables()
    {
        return $this->environment_variables;
    }

    /**
     * The environment variables to set when running the program. The worker may
     * provide its own default environment variables; these defaults can be
     * overridden using this field. Additional variables can also be specified.
     * In order to ensure that equivalent `Command`s always hash to the same
     * value, the environment variables MUST be lexicographically sorted by name.
     * Sorting of strings is done by code point, equivalently, by the UTF-8 bytes.
     *
     * Generated from protobuf field <code>repeated .google.devtools.remoteexecution.v1test.Command.EnvironmentVariable environment_variables = 2;</code>
     * @param \Google\Devtools\Remoteexecution\V1test\Command_EnvironmentVariable[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEnvironmentVariables($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Devtools\Remoteexecution\V1test\Command_EnvironmentVariable::class);
        $this->environment_variables = $arr;

        return $this;
    }

}

