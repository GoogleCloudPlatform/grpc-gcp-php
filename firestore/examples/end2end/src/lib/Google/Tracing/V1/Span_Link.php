<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/tracing/trace.proto

namespace Google\Tracing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Link one span with another which may be in a different Trace. Used (for
 * example) in batching operations, where a single batch handler processes
 * multiple requests from different traces.
 *
 * Generated from protobuf message <code>google.tracing.v1.Span.Link</code>
 */
class Span_Link extends \Google\Protobuf\Internal\Message
{
    /**
     * The trace and span identifier of the linked span.
     *
     * Generated from protobuf field <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     */
    private $trace_id = null;
    /**
     * Generated from protobuf field <code>fixed64 span_id = 2;</code>
     */
    private $span_id = 0;
    /**
     * Generated from protobuf field <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
     */
    private $type = 0;

    public function __construct() {
        \GPBMetadata\Google\Tracing\Trace::initOnce();
        parent::__construct();
    }

    /**
     * The trace and span identifier of the linked span.
     *
     * Generated from protobuf field <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     * @return \Google\Tracing\V1\TraceId
     */
    public function getTraceId()
    {
        return $this->trace_id;
    }

    /**
     * The trace and span identifier of the linked span.
     *
     * Generated from protobuf field <code>.google.tracing.v1.TraceId trace_id = 1;</code>
     * @param \Google\Tracing\V1\TraceId $var
     * @return $this
     */
    public function setTraceId($var)
    {
        GPBUtil::checkMessage($var, \Google\Tracing\V1\TraceId::class);
        $this->trace_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>fixed64 span_id = 2;</code>
     * @return int|string
     */
    public function getSpanId()
    {
        return $this->span_id;
    }

    /**
     * Generated from protobuf field <code>fixed64 span_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSpanId($var)
    {
        GPBUtil::checkUint64($var);
        $this->span_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.google.tracing.v1.Span.Link.Type type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Tracing\V1\Span_Link_Type::class);
        $this->type = $var;

        return $this;
    }

}

