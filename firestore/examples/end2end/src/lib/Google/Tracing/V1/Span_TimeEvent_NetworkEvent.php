<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/tracing/trace.proto

namespace Google\Tracing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An event describing an RPC message sent/received on the network.
 *
 * Generated from protobuf message <code>google.tracing.v1.Span.TimeEvent.NetworkEvent</code>
 */
class Span_TimeEvent_NetworkEvent extends \Google\Protobuf\Internal\Message
{
    /**
     * If available, this is the kernel time:
     * For sent messages, this is the time at which the first bit was sent.
     * For received messages, this is the time at which the last bit was
     * received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp kernel_time = 1;</code>
     */
    private $kernel_time = null;
    /**
     * Generated from protobuf field <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
     */
    private $type = 0;
    /**
     * Every message has an identifier, that must be different from all the
     * network messages in this span.
     * This is very important when the request/response are streamed.
     *
     * Generated from protobuf field <code>uint64 message_id = 3;</code>
     */
    private $message_id = 0;
    /**
     * Number of bytes send/receive.
     *
     * Generated from protobuf field <code>uint64 message_size = 4;</code>
     */
    private $message_size = 0;

    public function __construct() {
        \GPBMetadata\Google\Tracing\Trace::initOnce();
        parent::__construct();
    }

    /**
     * If available, this is the kernel time:
     * For sent messages, this is the time at which the first bit was sent.
     * For received messages, this is the time at which the last bit was
     * received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp kernel_time = 1;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getKernelTime()
    {
        return $this->kernel_time;
    }

    /**
     * If available, this is the kernel time:
     * For sent messages, this is the time at which the first bit was sent.
     * For received messages, this is the time at which the last bit was
     * received.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp kernel_time = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setKernelTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->kernel_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.google.tracing.v1.Span.TimeEvent.NetworkEvent.Type type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Tracing\V1\Span_TimeEvent_NetworkEvent_Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Every message has an identifier, that must be different from all the
     * network messages in this span.
     * This is very important when the request/response are streamed.
     *
     * Generated from protobuf field <code>uint64 message_id = 3;</code>
     * @return int|string
     */
    public function getMessageId()
    {
        return $this->message_id;
    }

    /**
     * Every message has an identifier, that must be different from all the
     * network messages in this span.
     * This is very important when the request/response are streamed.
     *
     * Generated from protobuf field <code>uint64 message_id = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMessageId($var)
    {
        GPBUtil::checkUint64($var);
        $this->message_id = $var;

        return $this;
    }

    /**
     * Number of bytes send/receive.
     *
     * Generated from protobuf field <code>uint64 message_size = 4;</code>
     * @return int|string
     */
    public function getMessageSize()
    {
        return $this->message_size;
    }

    /**
     * Number of bytes send/receive.
     *
     * Generated from protobuf field <code>uint64 message_size = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMessageSize($var)
    {
        GPBUtil::checkUint64($var);
        $this->message_size = $var;

        return $this;
    }

}

